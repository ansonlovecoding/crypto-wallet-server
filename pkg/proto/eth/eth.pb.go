// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.11
// source: eth/eth.proto

package eth

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *CommonReq) Reset() {
	*x = CommonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReq) ProtoMessage() {}

func (x *CommonReq) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReq.ProtoReflect.Descriptor instead.
func (*CommonReq) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{0}
}

func (x *CommonReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{1}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type GetBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CoinType    uint32 `protobuf:"varint,2,opt,name=CoinType,proto3" json:"CoinType,omitempty"`
	Address     string `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *GetBalanceReq) Reset() {
	*x = GetBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceReq) ProtoMessage() {}

func (x *GetBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceReq.ProtoReflect.Descriptor instead.
func (*GetBalanceReq) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{2}
}

func (x *GetBalanceReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetBalanceReq) GetCoinType() uint32 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

func (x *GetBalanceReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetBalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Balance string `protobuf:"bytes,3,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *GetBalanceResp) Reset() {
	*x = GetBalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResp) ProtoMessage() {}

func (x *GetBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResp.ProtoReflect.Descriptor instead.
func (*GetBalanceResp) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{3}
}

func (x *GetBalanceResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetBalanceResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetBalanceResp) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type GetGasPriceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID         string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	IsEstimatedGasPrice bool   `protobuf:"varint,2,opt,name=IsEstimatedGasPrice,proto3" json:"IsEstimatedGasPrice,omitempty"`
}

func (x *GetGasPriceReq) Reset() {
	*x = GetGasPriceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGasPriceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGasPriceReq) ProtoMessage() {}

func (x *GetGasPriceReq) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGasPriceReq.ProtoReflect.Descriptor instead.
func (*GetGasPriceReq) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{4}
}

func (x *GetGasPriceReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetGasPriceReq) GetIsEstimatedGasPrice() bool {
	if x != nil {
		return x.IsEstimatedGasPrice
	}
	return false
}

type GetGasPriceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode  int32  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg   string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	GasPrice int64  `protobuf:"varint,3,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
}

func (x *GetGasPriceRes) Reset() {
	*x = GetGasPriceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGasPriceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGasPriceRes) ProtoMessage() {}

func (x *GetGasPriceRes) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGasPriceRes.ProtoReflect.Descriptor instead.
func (*GetGasPriceRes) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{5}
}

func (x *GetGasPriceRes) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetGasPriceRes) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *GetGasPriceRes) GetGasPrice() int64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

type PostTransferReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CoinType        uint32 `protobuf:"varint,2,opt,name=CoinType,proto3" json:"CoinType,omitempty"`
	FromAccountUID  string `protobuf:"bytes,3,opt,name=FromAccountUID,proto3" json:"FromAccountUID,omitempty"`
	FromMerchantUID string `protobuf:"bytes,4,opt,name=FromMerchantUID,proto3" json:"FromMerchantUID,omitempty"`
	FromAddress     string `protobuf:"bytes,5,opt,name=FromAddress,proto3" json:"FromAddress,omitempty"`
	ToAddress       string `protobuf:"bytes,6,opt,name=ToAddress,proto3" json:"ToAddress,omitempty"`
	Amount          string `protobuf:"bytes,7,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Fee             string `protobuf:"bytes,8,opt,name=Fee,proto3" json:"Fee,omitempty"`
	GasLimit        uint64 `protobuf:"varint,9,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	Nounce          uint64 `protobuf:"varint,10,opt,name=Nounce,proto3" json:"Nounce,omitempty"`
	GasPrice        string `protobuf:"bytes,11,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	TxHash          string `protobuf:"bytes,13,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
}

func (x *PostTransferReq) Reset() {
	*x = PostTransferReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTransferReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTransferReq) ProtoMessage() {}

func (x *PostTransferReq) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTransferReq.ProtoReflect.Descriptor instead.
func (*PostTransferReq) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{6}
}

func (x *PostTransferReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *PostTransferReq) GetCoinType() uint32 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

func (x *PostTransferReq) GetFromAccountUID() string {
	if x != nil {
		return x.FromAccountUID
	}
	return ""
}

func (x *PostTransferReq) GetFromMerchantUID() string {
	if x != nil {
		return x.FromMerchantUID
	}
	return ""
}

func (x *PostTransferReq) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *PostTransferReq) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *PostTransferReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PostTransferReq) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *PostTransferReq) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *PostTransferReq) GetNounce() uint64 {
	if x != nil {
		return x.Nounce
	}
	return 0
}

func (x *PostTransferReq) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *PostTransferReq) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type EthTransactionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID               string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	SenderAccount      string `protobuf:"bytes,2,opt,name=SenderAccount,proto3" json:"SenderAccount,omitempty"`
	SenderAddress      string `protobuf:"bytes,3,opt,name=SenderAddress,proto3" json:"SenderAddress,omitempty"`
	ReceiverAccount    string `protobuf:"bytes,4,opt,name=ReceiverAccount,proto3" json:"ReceiverAccount,omitempty"`
	ReceiverAddress    string `protobuf:"bytes,5,opt,name=ReceiverAddress,proto3" json:"ReceiverAddress,omitempty"`
	Amount             string `protobuf:"bytes,6,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Fee                string `protobuf:"bytes,7,opt,name=Fee,proto3" json:"Fee,omitempty"`
	GasLimit           uint64 `protobuf:"varint,8,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	Nonce              uint64 `protobuf:"varint,9,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	SentHashTX         string `protobuf:"bytes,10,opt,name=SentHashTX,proto3" json:"SentHashTX,omitempty"`
	SentUpdatedAt      uint64 `protobuf:"varint,11,opt,name=SentUpdatedAt,proto3" json:"SentUpdatedAt,omitempty"`
	Status             int32  `protobuf:"varint,12,opt,name=Status,proto3" json:"Status,omitempty"`
	ConfirmTime        uint64 `protobuf:"varint,13,opt,name=ConfirmTime,proto3" json:"ConfirmTime,omitempty"`
	GasPrice           string `protobuf:"bytes,14,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	GasUsed            uint64 `protobuf:"varint,15,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	BlockNumber        uint64 `protobuf:"varint,16,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	ConfirmBlockNumber string `protobuf:"bytes,17,opt,name=ConfirmBlockNumber,proto3" json:"ConfirmBlockNumber,omitempty"`
}

func (x *EthTransactionDetail) Reset() {
	*x = EthTransactionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthTransactionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthTransactionDetail) ProtoMessage() {}

func (x *EthTransactionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthTransactionDetail.ProtoReflect.Descriptor instead.
func (*EthTransactionDetail) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{7}
}

func (x *EthTransactionDetail) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *EthTransactionDetail) GetSenderAccount() string {
	if x != nil {
		return x.SenderAccount
	}
	return ""
}

func (x *EthTransactionDetail) GetSenderAddress() string {
	if x != nil {
		return x.SenderAddress
	}
	return ""
}

func (x *EthTransactionDetail) GetReceiverAccount() string {
	if x != nil {
		return x.ReceiverAccount
	}
	return ""
}

func (x *EthTransactionDetail) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *EthTransactionDetail) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *EthTransactionDetail) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *EthTransactionDetail) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *EthTransactionDetail) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EthTransactionDetail) GetSentHashTX() string {
	if x != nil {
		return x.SentHashTX
	}
	return ""
}

func (x *EthTransactionDetail) GetSentUpdatedAt() uint64 {
	if x != nil {
		return x.SentUpdatedAt
	}
	return 0
}

func (x *EthTransactionDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EthTransactionDetail) GetConfirmTime() uint64 {
	if x != nil {
		return x.ConfirmTime
	}
	return 0
}

func (x *EthTransactionDetail) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *EthTransactionDetail) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *EthTransactionDetail) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *EthTransactionDetail) GetConfirmBlockNumber() string {
	if x != nil {
		return x.ConfirmBlockNumber
	}
	return ""
}

type TransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash        string `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	BlockNumber      string `protobuf:"bytes,2,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	From             string `protobuf:"bytes,3,opt,name=From,proto3" json:"From,omitempty"`
	Gas              int64  `protobuf:"varint,4,opt,name=Gas,proto3" json:"Gas,omitempty"`
	GasPrice         int64  `protobuf:"varint,5,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Hash             string `protobuf:"bytes,6,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Input            string `protobuf:"bytes,7,opt,name=Input,proto3" json:"Input,omitempty"`
	Nonce            int64  `protobuf:"varint,8,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	To               string `protobuf:"bytes,9,opt,name=To,proto3" json:"To,omitempty"`
	TransactionIndex int64  `protobuf:"varint,10,opt,name=TransactionIndex,proto3" json:"TransactionIndex,omitempty"`
	Value            string `protobuf:"bytes,11,opt,name=Value,proto3" json:"Value,omitempty"`
	V                int64  `protobuf:"varint,12,opt,name=V,proto3" json:"V,omitempty"`
	R                string `protobuf:"bytes,13,opt,name=R,proto3" json:"R,omitempty"`
	S                string `protobuf:"bytes,14,opt,name=S,proto3" json:"S,omitempty"`
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionInfo) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *TransactionInfo) GetBlockNumber() string {
	if x != nil {
		return x.BlockNumber
	}
	return ""
}

func (x *TransactionInfo) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransactionInfo) GetGas() int64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *TransactionInfo) GetGasPrice() int64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *TransactionInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TransactionInfo) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TransactionInfo) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionInfo) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionInfo) GetTransactionIndex() int64 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

func (x *TransactionInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TransactionInfo) GetV() int64 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *TransactionInfo) GetR() string {
	if x != nil {
		return x.R
	}
	return ""
}

func (x *TransactionInfo) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

type TransferRPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode     int32                 `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg      string                `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Transaction *EthTransactionDetail `protobuf:"bytes,3,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
}

func (x *TransferRPCResponse) Reset() {
	*x = TransferRPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRPCResponse) ProtoMessage() {}

func (x *TransferRPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRPCResponse.ProtoReflect.Descriptor instead.
func (*TransferRPCResponse) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{9}
}

func (x *TransferRPCResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *TransferRPCResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *TransferRPCResponse) GetTransaction() *EthTransactionDetail {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GetEthConfirmationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CoinType        uint32 `protobuf:"varint,2,opt,name=CoinType,proto3" json:"CoinType,omitempty"`
	TransactionHash string `protobuf:"bytes,3,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	MessageID       string `protobuf:"bytes,4,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
}

func (x *GetEthConfirmationReq) Reset() {
	*x = GetEthConfirmationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEthConfirmationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEthConfirmationReq) ProtoMessage() {}

func (x *GetEthConfirmationReq) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEthConfirmationReq.ProtoReflect.Descriptor instead.
func (*GetEthConfirmationReq) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{10}
}

func (x *GetEthConfirmationReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetEthConfirmationReq) GetCoinType() uint32 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

func (x *GetEthConfirmationReq) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *GetEthConfirmationReq) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type GetEthConfirmationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum    string `protobuf:"bytes,1,opt,name=BlockNum,proto3" json:"BlockNum,omitempty"`
	Status      int32  `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	ConfirmTime uint64 `protobuf:"varint,3,opt,name=ConfirmTime,proto3" json:"ConfirmTime,omitempty"`
	GasUsed     string `protobuf:"bytes,4,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
}

func (x *GetEthConfirmationRes) Reset() {
	*x = GetEthConfirmationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEthConfirmationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEthConfirmationRes) ProtoMessage() {}

func (x *GetEthConfirmationRes) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEthConfirmationRes.ProtoReflect.Descriptor instead.
func (*GetEthConfirmationRes) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{11}
}

func (x *GetEthConfirmationRes) GetBlockNum() string {
	if x != nil {
		return x.BlockNum
	}
	return ""
}

func (x *GetEthConfirmationRes) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetEthConfirmationRes) GetConfirmTime() uint64 {
	if x != nil {
		return x.ConfirmTime
	}
	return 0
}

func (x *GetEthConfirmationRes) GetGasUsed() string {
	if x != nil {
		return x.GasUsed
	}
	return ""
}

type RequestPagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *RequestPagination) Reset() {
	*x = RequestPagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPagination) ProtoMessage() {}

func (x *RequestPagination) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPagination.ProtoReflect.Descriptor instead.
func (*RequestPagination) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{12}
}

func (x *RequestPagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RequestPagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ResponsePagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *ResponsePagination) Reset() {
	*x = ResponsePagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePagination) ProtoMessage() {}

func (x *ResponsePagination) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePagination.ProtoReflect.Descriptor instead.
func (*ResponsePagination) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{13}
}

func (x *ResponsePagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ResponsePagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PostTransferReq2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Rawhex      string `protobuf:"bytes,2,opt,name=Rawhex,proto3" json:"Rawhex,omitempty"`
}

func (x *PostTransferReq2) Reset() {
	*x = PostTransferReq2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostTransferReq2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTransferReq2) ProtoMessage() {}

func (x *PostTransferReq2) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTransferReq2.ProtoReflect.Descriptor instead.
func (*PostTransferReq2) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{14}
}

func (x *PostTransferReq2) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *PostTransferReq2) GetRawhex() string {
	if x != nil {
		return x.Rawhex
	}
	return ""
}

type TransferRPCResponse2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode  int32  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg   string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	TranHash string `protobuf:"bytes,3,opt,name=TranHash,proto3" json:"TranHash,omitempty"`
}

func (x *TransferRPCResponse2) Reset() {
	*x = TransferRPCResponse2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRPCResponse2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRPCResponse2) ProtoMessage() {}

func (x *TransferRPCResponse2) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRPCResponse2.ProtoReflect.Descriptor instead.
func (*TransferRPCResponse2) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{15}
}

func (x *TransferRPCResponse2) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *TransferRPCResponse2) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *TransferRPCResponse2) GetTranHash() string {
	if x != nil {
		return x.TranHash
	}
	return ""
}

type CheckBalanceAndGetNonceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	CoinType       uint32 `protobuf:"varint,2,opt,name=CoinType,proto3" json:"CoinType,omitempty"`
	FromAddress    string `protobuf:"bytes,3,opt,name=FromAddress,proto3" json:"FromAddress,omitempty"`
	TransactAmount string `protobuf:"bytes,4,opt,name=TransactAmount,proto3" json:"TransactAmount,omitempty"`
	GasPrice       string `protobuf:"bytes,5,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	GasLimit       string `protobuf:"bytes,6,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
}

func (x *CheckBalanceAndGetNonceReq) Reset() {
	*x = CheckBalanceAndGetNonceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBalanceAndGetNonceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBalanceAndGetNonceReq) ProtoMessage() {}

func (x *CheckBalanceAndGetNonceReq) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBalanceAndGetNonceReq.ProtoReflect.Descriptor instead.
func (*CheckBalanceAndGetNonceReq) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{16}
}

func (x *CheckBalanceAndGetNonceReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CheckBalanceAndGetNonceReq) GetCoinType() uint32 {
	if x != nil {
		return x.CoinType
	}
	return 0
}

func (x *CheckBalanceAndGetNonceReq) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *CheckBalanceAndGetNonceReq) GetTransactAmount() string {
	if x != nil {
		return x.TransactAmount
	}
	return ""
}

func (x *CheckBalanceAndGetNonceReq) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *CheckBalanceAndGetNonceReq) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

type CheckBalanceAndGetNonceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode                  int32  `protobuf:"varint,1,opt,name=ErrCode,proto3" json:"ErrCode,omitempty"`
	ErrMsg                   string `protobuf:"bytes,2,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
	Nonce                    uint64 `protobuf:"varint,3,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	ChainID                  string `protobuf:"bytes,4,opt,name=ChainID,proto3" json:"ChainID,omitempty"`
	USDTERC20ContractAddress string `protobuf:"bytes,5,opt,name=USDTERC20ContractAddress,proto3" json:"USDTERC20ContractAddress,omitempty"`
}

func (x *CheckBalanceAndGetNonceResp) Reset() {
	*x = CheckBalanceAndGetNonceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBalanceAndGetNonceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBalanceAndGetNonceResp) ProtoMessage() {}

func (x *CheckBalanceAndGetNonceResp) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBalanceAndGetNonceResp.ProtoReflect.Descriptor instead.
func (*CheckBalanceAndGetNonceResp) Descriptor() ([]byte, []int) {
	return file_eth_eth_proto_rawDescGZIP(), []int{17}
}

func (x *CheckBalanceAndGetNonceResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CheckBalanceAndGetNonceResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *CheckBalanceAndGetNonceResp) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *CheckBalanceAndGetNonceResp) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *CheckBalanceAndGetNonceResp) GetUSDTERC20ContractAddress() string {
	if x != nil {
		return x.USDTERC20ContractAddress
	}
	return ""
}

var File_eth_eth_proto protoreflect.FileDescriptor

var file_eth_eth_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x74, 0x68, 0x2f, 0x65, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x65, 0x74, 0x68, 0x22, 0x2d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x22, 0x67, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x5c, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x64, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x30,
	0x0a, 0x13, 0x49, 0x73, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x47, 0x61, 0x73,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x49, 0x73, 0x45,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x5e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0xf3, 0x02, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x72, 0x6f, 0x6d,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x72,
	0x6f, 0x6d, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x55, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x6f, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x6f, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x46, 0x65, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0xae, 0x04, 0x0a, 0x14, 0x45, 0x74, 0x68, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x46,
	0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x54, 0x58, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x54, 0x58, 0x12,
	0x24, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x53, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47,
	0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x47, 0x61,
	0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xcf, 0x02, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x46,
	0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x47, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x47, 0x61,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x54, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x2a, 0x0a,
	0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x0c, 0x0a, 0x01, 0x56, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x56, 0x12, 0x0c, 0x0a,
	0x01, 0x52, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x52, 0x12, 0x0c, 0x0a, 0x01, 0x53,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x53, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x45,
	0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x9d, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x22, 0x87, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x44, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x61, 0x77, 0x68, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x77,
	0x68, 0x65, 0x78, 0x22, 0x64, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x54, 0x72, 0x61, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x54, 0x72, 0x61, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0xdc, 0x01, 0x0a, 0x1a, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x6f,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x1b, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x18, 0x55, 0x53,
	0x44, 0x54, 0x45, 0x52, 0x43, 0x32, 0x30, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x55, 0x53,
	0x44, 0x54, 0x45, 0x52, 0x43, 0x32, 0x30, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0xe1, 0x03, 0x0a, 0x03, 0x65, 0x74, 0x68, 0x12, 0x2d,
	0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x45, 0x74, 0x68, 0x52, 0x50, 0x43, 0x12, 0x0e, 0x2e, 0x65,
	0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x65,
	0x74, 0x68, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x45, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x50,
	0x43, 0x12, 0x12, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x45, 0x74, 0x68, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x50, 0x43, 0x12,
	0x13, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x50, 0x43, 0x12, 0x14, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x65, 0x74, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x50, 0x43,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x50, 0x43, 0x56, 0x32, 0x12, 0x15, 0x2e, 0x65, 0x74, 0x68, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x32,
	0x1a, 0x19, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x12, 0x4c, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x50,
	0x43, 0x12, 0x1a, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x74, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x65, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x1a, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x52, 0x50, 0x43, 0x12, 0x1f, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f,
	0x65, 0x74, 0x68, 0x3b, 0x65, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eth_eth_proto_rawDescOnce sync.Once
	file_eth_eth_proto_rawDescData = file_eth_eth_proto_rawDesc
)

func file_eth_eth_proto_rawDescGZIP() []byte {
	file_eth_eth_proto_rawDescOnce.Do(func() {
		file_eth_eth_proto_rawDescData = protoimpl.X.CompressGZIP(file_eth_eth_proto_rawDescData)
	})
	return file_eth_eth_proto_rawDescData
}

var file_eth_eth_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_eth_eth_proto_goTypes = []interface{}{
	(*CommonReq)(nil),                   // 0: eth.CommonReq
	(*CommonResp)(nil),                  // 1: eth.CommonResp
	(*GetBalanceReq)(nil),               // 2: eth.GetBalanceReq
	(*GetBalanceResp)(nil),              // 3: eth.GetBalanceResp
	(*GetGasPriceReq)(nil),              // 4: eth.GetGasPriceReq
	(*GetGasPriceRes)(nil),              // 5: eth.GetGasPriceRes
	(*PostTransferReq)(nil),             // 6: eth.PostTransferReq
	(*EthTransactionDetail)(nil),        // 7: eth.EthTransactionDetail
	(*TransactionInfo)(nil),             // 8: eth.TransactionInfo
	(*TransferRPCResponse)(nil),         // 9: eth.TransferRPCResponse
	(*GetEthConfirmationReq)(nil),       // 10: eth.GetEthConfirmationReq
	(*GetEthConfirmationRes)(nil),       // 11: eth.GetEthConfirmationRes
	(*RequestPagination)(nil),           // 12: eth.RequestPagination
	(*ResponsePagination)(nil),          // 13: eth.ResponsePagination
	(*PostTransferReq2)(nil),            // 14: eth.PostTransferReq2
	(*TransferRPCResponse2)(nil),        // 15: eth.TransferRPCResponse2
	(*CheckBalanceAndGetNonceReq)(nil),  // 16: eth.CheckBalanceAndGetNonceReq
	(*CheckBalanceAndGetNonceResp)(nil), // 17: eth.CheckBalanceAndGetNonceResp
}
var file_eth_eth_proto_depIdxs = []int32{
	7,  // 0: eth.TransferRPCResponse.Transaction:type_name -> eth.EthTransactionDetail
	0,  // 1: eth.eth.TestEthRPC:input_type -> eth.CommonReq
	2,  // 2: eth.eth.GetEthBalanceRPC:input_type -> eth.GetBalanceReq
	4,  // 3: eth.eth.GetEthGasPriceRPC:input_type -> eth.GetGasPriceReq
	6,  // 4: eth.eth.TransferRPC:input_type -> eth.PostTransferReq
	14, // 5: eth.eth.TransferRPCV2:input_type -> eth.PostTransferReq2
	10, // 6: eth.eth.GetConfirmationRPC:input_type -> eth.GetEthConfirmationReq
	16, // 7: eth.eth.CheckBalanceAndGetNonceRPC:input_type -> eth.CheckBalanceAndGetNonceReq
	1,  // 8: eth.eth.TestEthRPC:output_type -> eth.CommonResp
	3,  // 9: eth.eth.GetEthBalanceRPC:output_type -> eth.GetBalanceResp
	5,  // 10: eth.eth.GetEthGasPriceRPC:output_type -> eth.GetGasPriceRes
	9,  // 11: eth.eth.TransferRPC:output_type -> eth.TransferRPCResponse
	15, // 12: eth.eth.TransferRPCV2:output_type -> eth.TransferRPCResponse2
	11, // 13: eth.eth.GetConfirmationRPC:output_type -> eth.GetEthConfirmationRes
	17, // 14: eth.eth.CheckBalanceAndGetNonceRPC:output_type -> eth.CheckBalanceAndGetNonceResp
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_eth_eth_proto_init() }
func file_eth_eth_proto_init() {
	if File_eth_eth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eth_eth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGasPriceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGasPriceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTransferReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthTransactionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEthConfirmationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEthConfirmationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostTransferReq2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRPCResponse2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckBalanceAndGetNonceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckBalanceAndGetNonceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eth_eth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eth_eth_proto_goTypes,
		DependencyIndexes: file_eth_eth_proto_depIdxs,
		MessageInfos:      file_eth_eth_proto_msgTypes,
	}.Build()
	File_eth_eth_proto = out.File
	file_eth_eth_proto_rawDesc = nil
	file_eth_eth_proto_goTypes = nil
	file_eth_eth_proto_depIdxs = nil
}
