// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.11
// source: admin/admin.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *CommonReq) Reset() {
	*x = CommonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReq) ProtoMessage() {}

func (x *CommonReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReq.ProtoReflect.Descriptor instead.
func (*CommonReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{0}
}

func (x *CommonReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{1}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type AdminLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	AdminID        string `protobuf:"bytes,2,opt,name=AdminID,proto3" json:"AdminID,omitempty"`
	Secret         string `protobuf:"bytes,3,opt,name=Secret,proto3" json:"Secret,omitempty"`
	GAuthTypeToken bool   `protobuf:"varint,4,opt,name=GAuthTypeToken,proto3" json:"GAuthTypeToken,omitempty"`
	SecretHashd    bool   `protobuf:"varint,5,opt,name=SecretHashd,proto3" json:"SecretHashd,omitempty"`
	LoginIp        string `protobuf:"bytes,6,opt,name=LoginIp,proto3" json:"LoginIp,omitempty"`
}

func (x *AdminLoginReq) Reset() {
	*x = AdminLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginReq) ProtoMessage() {}

func (x *AdminLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginReq.ProtoReflect.Descriptor instead.
func (*AdminLoginReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{2}
}

func (x *AdminLoginReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AdminLoginReq) GetAdminID() string {
	if x != nil {
		return x.AdminID
	}
	return ""
}

func (x *AdminLoginReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *AdminLoginReq) GetGAuthTypeToken() bool {
	if x != nil {
		return x.GAuthTypeToken
	}
	return false
}

func (x *AdminLoginReq) GetSecretHashd() bool {
	if x != nil {
		return x.SecretHashd
	}
	return false
}

func (x *AdminLoginReq) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

type AdminLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token              string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	GAuthEnabled       bool   `protobuf:"varint,2,opt,name=GAuthEnabled,proto3" json:"GAuthEnabled,omitempty"`
	GAuthSetupRequired bool   `protobuf:"varint,3,opt,name=GAuthSetupRequired,proto3" json:"GAuthSetupRequired,omitempty"`
	GAuthSetupProvUri  string `protobuf:"bytes,4,opt,name=GAuthSetupProvUri,proto3" json:"GAuthSetupProvUri,omitempty"`
	User               *User  `protobuf:"bytes,5,opt,name=User,proto3" json:"User,omitempty"`
}

func (x *AdminLoginResp) Reset() {
	*x = AdminLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginResp) ProtoMessage() {}

func (x *AdminLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginResp.ProtoReflect.Descriptor instead.
func (*AdminLoginResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{3}
}

func (x *AdminLoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AdminLoginResp) GetGAuthEnabled() bool {
	if x != nil {
		return x.GAuthEnabled
	}
	return false
}

func (x *AdminLoginResp) GetGAuthSetupRequired() bool {
	if x != nil {
		return x.GAuthSetupRequired
	}
	return false
}

func (x *AdminLoginResp) GetGAuthSetupProvUri() string {
	if x != nil {
		return x.GAuthSetupProvUri
	}
	return ""
}

func (x *AdminLoginResp) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName    string   `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Role        string   `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	Permissions []string `protobuf:"bytes,3,rep,name=Permissions,proto3" json:"Permissions,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *User) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type AddAdminUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddAdminUserResp) Reset() {
	*x = AddAdminUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminUserResp) ProtoMessage() {}

func (x *AddAdminUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminUserResp.ProtoReflect.Descriptor instead.
func (*AddAdminUserResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{5}
}

func (x *AddAdminUserResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AddAdminUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserID       int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NickName     string `protobuf:"bytes,4,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	OpUserId     string `protobuf:"bytes,5,opt,name=OpUserId,proto3" json:"OpUserId,omitempty"`
	Password     string `protobuf:"bytes,6,opt,name=Password,proto3" json:"Password,omitempty"`
	Role         string `protobuf:"bytes,7,opt,name=Role,proto3" json:"Role,omitempty"`
	Status       int32  `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"`
	GAuthEnabled bool   `protobuf:"varint,9,opt,name=GAuthEnabled,proto3" json:"GAuthEnabled,omitempty"`
	Remarks      string `protobuf:"bytes,10,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
}

func (x *AddAdminUserReq) Reset() {
	*x = AddAdminUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminUserReq) ProtoMessage() {}

func (x *AddAdminUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminUserReq.ProtoReflect.Descriptor instead.
func (*AddAdminUserReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{6}
}

func (x *AddAdminUserReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddAdminUserReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AddAdminUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddAdminUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AddAdminUserReq) GetOpUserId() string {
	if x != nil {
		return x.OpUserId
	}
	return ""
}

func (x *AddAdminUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddAdminUserReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AddAdminUserReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddAdminUserReq) GetGAuthEnabled() bool {
	if x != nil {
		return x.GAuthEnabled
	}
	return false
}

func (x *AddAdminUserReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type ChangeAdminUserPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret      string `protobuf:"bytes,1,opt,name=Secret,proto3" json:"Secret,omitempty"`
	NewSecret   string `protobuf:"bytes,2,opt,name=NewSecret,proto3" json:"NewSecret,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	// string TOTP = 4;
	UserName string `protobuf:"bytes,5,opt,name=UserName,proto3" json:"UserName,omitempty"`
}

func (x *ChangeAdminUserPasswordReq) Reset() {
	*x = ChangeAdminUserPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAdminUserPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAdminUserPasswordReq) ProtoMessage() {}

func (x *ChangeAdminUserPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAdminUserPasswordReq.ProtoReflect.Descriptor instead.
func (*ChangeAdminUserPasswordReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeAdminUserPasswordReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ChangeAdminUserPasswordReq) GetNewSecret() string {
	if x != nil {
		return x.NewSecret
	}
	return ""
}

func (x *ChangeAdminUserPasswordReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ChangeAdminUserPasswordReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type ChangeAdminUserPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token           string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	PasswordUpdated bool   `protobuf:"varint,2,opt,name=PasswordUpdated,proto3" json:"PasswordUpdated,omitempty"`
}

func (x *ChangeAdminUserPasswordResp) Reset() {
	*x = ChangeAdminUserPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAdminUserPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAdminUserPasswordResp) ProtoMessage() {}

func (x *ChangeAdminUserPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAdminUserPasswordResp.ProtoReflect.Descriptor instead.
func (*ChangeAdminUserPasswordResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{8}
}

func (x *ChangeAdminUserPasswordResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ChangeAdminUserPasswordResp) GetPasswordUpdated() bool {
	if x != nil {
		return x.PasswordUpdated
	}
	return false
}

type GetAdminUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination  *RequestPagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	OperationID string             `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Name        string             `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	OrderBy     string             `protobuf:"bytes,4,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
}

func (x *GetAdminUserListReq) Reset() {
	*x = GetAdminUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminUserListReq) ProtoMessage() {}

func (x *GetAdminUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminUserListReq.ProtoReflect.Descriptor instead.
func (*GetAdminUserListReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{9}
}

func (x *GetAdminUserListReq) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAdminUserListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAdminUserListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAdminUserListReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type GetAdminUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination  *ResponsePagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	OperationID string              `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	User        []*AdminUser        `protobuf:"bytes,3,rep,name=user,proto3" json:"user,omitempty"`
	TotalUsers  int64               `protobuf:"varint,4,opt,name=TotalUsers,proto3" json:"TotalUsers,omitempty"`
}

func (x *GetAdminUserListResp) Reset() {
	*x = GetAdminUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminUserListResp) ProtoMessage() {}

func (x *GetAdminUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminUserListResp.ProtoReflect.Descriptor instead.
func (*GetAdminUserListResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{10}
}

func (x *GetAdminUserListResp) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAdminUserListResp) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAdminUserListResp) GetUser() []*AdminUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetAdminUserListResp) GetTotalUsers() int64 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

type GetAdminUserRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination  *RequestPagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	OperationID string             `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Name        string             `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	OrderBy     string             `protobuf:"bytes,4,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
}

func (x *GetAdminUserRoleReq) Reset() {
	*x = GetAdminUserRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminUserRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminUserRoleReq) ProtoMessage() {}

func (x *GetAdminUserRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminUserRoleReq.ProtoReflect.Descriptor instead.
func (*GetAdminUserRoleReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{11}
}

func (x *GetAdminUserRoleReq) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAdminUserRoleReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAdminUserRoleReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAdminUserRoleReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type GetAdminUserRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination    *ResponsePagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	OperationID   string              `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Role          []*AdminUserRole    `protobuf:"bytes,3,rep,name=role,proto3" json:"role,omitempty"`
	TotalUserRole int64               `protobuf:"varint,4,opt,name=TotalUserRole,proto3" json:"TotalUserRole,omitempty"`
}

func (x *GetAdminUserRoleResp) Reset() {
	*x = GetAdminUserRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminUserRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminUserRoleResp) ProtoMessage() {}

func (x *GetAdminUserRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminUserRoleResp.ProtoReflect.Descriptor instead.
func (*GetAdminUserRoleResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{12}
}

func (x *GetAdminUserRoleResp) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAdminUserRoleResp) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAdminUserRoleResp) GetRole() []*AdminUserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *GetAdminUserRoleResp) GetTotalUserRole() int64 {
	if x != nil {
		return x.TotalUserRole
	}
	return 0
}

type AdminUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserName         string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Role             string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
	LastLoginIP      string `protobuf:"bytes,4,opt,name=LastLoginIP,proto3" json:"LastLoginIP,omitempty"`
	LastLoginTime    int64  `protobuf:"varint,5,opt,name=LastLoginTime,proto3" json:"LastLoginTime,omitempty"`
	Status           int32  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	TwoFactorEnabled bool   `protobuf:"varint,7,opt,name=TwoFactorEnabled,proto3" json:"TwoFactorEnabled,omitempty"`
	Remarks          string `protobuf:"bytes,8,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
}

func (x *AdminUser) Reset() {
	*x = AdminUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUser) ProtoMessage() {}

func (x *AdminUser) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUser.ProtoReflect.Descriptor instead.
func (*AdminUser) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{13}
}

func (x *AdminUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AdminUser) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AdminUser) GetLastLoginIP() string {
	if x != nil {
		return x.LastLoginIP
	}
	return ""
}

func (x *AdminUser) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *AdminUser) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminUser) GetTwoFactorEnabled() bool {
	if x != nil {
		return x.TwoFactorEnabled
	}
	return false
}

func (x *AdminUser) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type AdminUserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	RoleName        string `protobuf:"bytes,2,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	RoleDescription string `protobuf:"bytes,3,opt,name=RoleDescription,proto3" json:"RoleDescription,omitempty"`
	RoleNumber      int32  `protobuf:"varint,4,opt,name=RoleNumber,proto3" json:"RoleNumber,omitempty"`
	Remarks         string `protobuf:"bytes,5,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	CreateTime      int64  `protobuf:"varint,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Status          int32  `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`
	UpdateTime      int64  `protobuf:"varint,8,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	CreateUser      string `protobuf:"bytes,9,opt,name=CreateUser,proto3" json:"CreateUser,omitempty"`
	UpdateUser      string `protobuf:"bytes,10,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
}

func (x *AdminUserRole) Reset() {
	*x = AdminUserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminUserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUserRole) ProtoMessage() {}

func (x *AdminUserRole) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUserRole.ProtoReflect.Descriptor instead.
func (*AdminUserRole) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{14}
}

func (x *AdminUserRole) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminUserRole) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AdminUserRole) GetRoleDescription() string {
	if x != nil {
		return x.RoleDescription
	}
	return ""
}

func (x *AdminUserRole) GetRoleNumber() int32 {
	if x != nil {
		return x.RoleNumber
	}
	return 0
}

func (x *AdminUserRole) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AdminUserRole) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AdminUserRole) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminUserRole) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *AdminUserRole) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *AdminUserRole) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type AddAdminUserRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	RoleName        string `protobuf:"bytes,2,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	RoleDescription string `protobuf:"bytes,3,opt,name=RoleDescription,proto3" json:"RoleDescription,omitempty"`
	ActionIDs       string `protobuf:"bytes,4,opt,name=ActionIDs,proto3" json:"ActionIDs,omitempty"`
	Remarks         string `protobuf:"bytes,5,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	UserName        string `protobuf:"bytes,6,opt,name=UserName,proto3" json:"UserName,omitempty"`
	CreateTime      int64  `protobuf:"varint,7,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Status          int32  `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AddAdminUserRoleReq) Reset() {
	*x = AddAdminUserRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminUserRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminUserRoleReq) ProtoMessage() {}

func (x *AddAdminUserRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminUserRoleReq.ProtoReflect.Descriptor instead.
func (*AddAdminUserRoleReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{15}
}

func (x *AddAdminUserRoleReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *AddAdminUserRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AddAdminUserRoleReq) GetRoleDescription() string {
	if x != nil {
		return x.RoleDescription
	}
	return ""
}

func (x *AddAdminUserRoleReq) GetActionIDs() string {
	if x != nil {
		return x.ActionIDs
	}
	return ""
}

func (x *AddAdminUserRoleReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AddAdminUserRoleReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddAdminUserRoleReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AddAdminUserRoleReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AddAdminRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *AddAdminRoleResp) Reset() {
	*x = AddAdminRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminRoleResp) ProtoMessage() {}

func (x *AddAdminRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminRoleResp.ProtoReflect.Descriptor instead.
func (*AddAdminRoleResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{16}
}

func (x *AddAdminRoleResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type RequestPagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *RequestPagination) Reset() {
	*x = RequestPagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPagination) ProtoMessage() {}

func (x *RequestPagination) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPagination.ProtoReflect.Descriptor instead.
func (*RequestPagination) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{17}
}

func (x *RequestPagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RequestPagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ResponsePagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *ResponsePagination) Reset() {
	*x = ResponsePagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePagination) ProtoMessage() {}

func (x *ResponsePagination) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePagination.ProtoReflect.Descriptor instead.
func (*ResponsePagination) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{18}
}

func (x *ResponsePagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ResponsePagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DeleteAdminReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserName    string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	DeleteUser  string `protobuf:"bytes,3,opt,name=DeleteUser,proto3" json:"DeleteUser,omitempty"`
}

func (x *DeleteAdminReq) Reset() {
	*x = DeleteAdminReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAdminReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdminReq) ProtoMessage() {}

func (x *DeleteAdminReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdminReq.ProtoReflect.Descriptor instead.
func (*DeleteAdminReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteAdminReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteAdminReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *DeleteAdminReq) GetDeleteUser() string {
	if x != nil {
		return x.DeleteUser
	}
	return ""
}

type UpdateAdminReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserName         string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Password         string `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	RoleName         string `protobuf:"bytes,4,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	Remarks          string `protobuf:"bytes,5,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	Status           int32  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`
	TwoFactorEnabled bool   `protobuf:"varint,7,opt,name=TwoFactorEnabled,proto3" json:"TwoFactorEnabled,omitempty"`
	UpdateUser       string `protobuf:"bytes,8,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
}

func (x *UpdateAdminReq) Reset() {
	*x = UpdateAdminReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminReq) ProtoMessage() {}

func (x *UpdateAdminReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminReq.ProtoReflect.Descriptor instead.
func (*UpdateAdminReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateAdminReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UpdateAdminReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateAdminReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateAdminReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateAdminReq) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *UpdateAdminReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateAdminReq) GetTwoFactorEnabled() bool {
	if x != nil {
		return x.TwoFactorEnabled
	}
	return false
}

func (x *UpdateAdminReq) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type UpdateAdminResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	AdminUpdated bool   `protobuf:"varint,2,opt,name=AdminUpdated,proto3" json:"AdminUpdated,omitempty"`
}

func (x *UpdateAdminResp) Reset() {
	*x = UpdateAdminResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminResp) ProtoMessage() {}

func (x *UpdateAdminResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminResp.ProtoReflect.Descriptor instead.
func (*UpdateAdminResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateAdminResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAdminResp) GetAdminUpdated() bool {
	if x != nil {
		return x.AdminUpdated
	}
	return false
}

type UpdateAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	RoleName    string `protobuf:"bytes,2,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	ActionIDs   string `protobuf:"bytes,4,opt,name=ActionIDs,proto3" json:"ActionIDs,omitempty"`
	Remarks     string `protobuf:"bytes,5,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	UpdateUser  string `protobuf:"bytes,6,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
}

func (x *UpdateAdminRoleRequest) Reset() {
	*x = UpdateAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminRoleRequest) ProtoMessage() {}

func (x *UpdateAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateAdminRoleRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UpdateAdminRoleRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateAdminRoleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAdminRoleRequest) GetActionIDs() string {
	if x != nil {
		return x.ActionIDs
	}
	return ""
}

func (x *UpdateAdminRoleRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *UpdateAdminRoleRequest) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type UpdateAdminRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	AdminRoleUpdated bool   `protobuf:"varint,2,opt,name=AdminRoleUpdated,proto3" json:"AdminRoleUpdated,omitempty"`
}

func (x *UpdateAdminRoleResponse) Reset() {
	*x = UpdateAdminRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdminRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminRoleResponse) ProtoMessage() {}

func (x *UpdateAdminRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateAdminRoleResponse) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateAdminRoleResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAdminRoleResponse) GetAdminRoleUpdated() bool {
	if x != nil {
		return x.AdminRoleUpdated
	}
	return false
}

type DeleteAdminRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	RoleName    string `protobuf:"bytes,2,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	DeleteUser  string `protobuf:"bytes,3,opt,name=DeleteUser,proto3" json:"DeleteUser,omitempty"`
}

func (x *DeleteAdminRoleRequest) Reset() {
	*x = DeleteAdminRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAdminRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdminRoleRequest) ProtoMessage() {}

func (x *DeleteAdminRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdminRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteAdminRoleRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteAdminRoleRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *DeleteAdminRoleRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *DeleteAdminRoleRequest) GetDeleteUser() string {
	if x != nil {
		return x.DeleteUser
	}
	return ""
}

type AdminActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName string `protobuf:"bytes,1,opt,name=ActionName,proto3" json:"ActionName,omitempty"`
	Pid        string `protobuf:"bytes,2,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Remarks    string `protobuf:"bytes,3,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AdminActions) Reset() {
	*x = AdminActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminActions) ProtoMessage() {}

func (x *AdminActions) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminActions.ProtoReflect.Descriptor instead.
func (*AdminActions) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{25}
}

func (x *AdminActions) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *AdminActions) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *AdminActions) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AdminActions) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetAdminActionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *GetAdminActionsRequest) Reset() {
	*x = GetAdminActionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminActionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminActionsRequest) ProtoMessage() {}

func (x *GetAdminActionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminActionsRequest.ProtoReflect.Descriptor instead.
func (*GetAdminActionsRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{26}
}

func (x *GetAdminActionsRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetAdminActionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions string `protobuf:"bytes,1,opt,name=Actions,proto3" json:"Actions,omitempty"`
}

func (x *GetAdminActionsResponse) Reset() {
	*x = GetAdminActionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminActionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminActionsResponse) ProtoMessage() {}

func (x *GetAdminActionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminActionsResponse.ProtoReflect.Descriptor instead.
func (*GetAdminActionsResponse) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{27}
}

func (x *GetAdminActionsResponse) GetActions() string {
	if x != nil {
		return x.Actions
	}
	return ""
}

type NewAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *NewAction) Reset() {
	*x = NewAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAction) ProtoMessage() {}

func (x *NewAction) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAction.ProtoReflect.Descriptor instead.
func (*NewAction) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{28}
}

func (x *NewAction) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *NewAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int32     `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name     string    `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Children []*Action `protobuf:"bytes,3,rep,name=Children,proto3" json:"Children,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{29}
}

func (x *Action) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Action) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action) GetChildren() []*Action {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetAdminUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName    string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
}

func (x *GetAdminUserRequest) Reset() {
	*x = GetAdminUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminUserRequest) ProtoMessage() {}

func (x *GetAdminUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminUserRequest.ProtoReflect.Descriptor instead.
func (*GetAdminUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{30}
}

func (x *GetAdminUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetAdminUserRequest) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetAdminUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName    string  `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	RoleName    string  `protobuf:"bytes,2,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
	Permissions []int64 `protobuf:"varint,3,rep,packed,name=Permissions,proto3" json:"Permissions,omitempty"`
}

func (x *GetAdminUserResponse) Reset() {
	*x = GetAdminUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdminUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminUserResponse) ProtoMessage() {}

func (x *GetAdminUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminUserResponse.ProtoReflect.Descriptor instead.
func (*GetAdminUserResponse) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{31}
}

func (x *GetAdminUserResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetAdminUserResponse) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *GetAdminUserResponse) GetPermissions() []int64 {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type GetAccountInformationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID    string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OrderBy        string             `protobuf:"bytes,2,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	Sort           string             `protobuf:"bytes,3,opt,name=Sort,proto3" json:"Sort,omitempty"`
	MerchantUid    string             `protobuf:"bytes,4,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
	Uid            string             `protobuf:"bytes,5,opt,name=Uid,proto3" json:"Uid,omitempty"`
	AccountAddress string             `protobuf:"bytes,6,opt,name=AccountAddress,proto3" json:"AccountAddress,omitempty"`
	CoinsType      string             `protobuf:"bytes,7,opt,name=CoinsType,proto3" json:"CoinsType,omitempty"`
	AccountSource  string             `protobuf:"bytes,8,opt,name=AccountSource,proto3" json:"AccountSource,omitempty"`
	Filter         string             `protobuf:"bytes,9,opt,name=Filter,proto3" json:"Filter,omitempty"`
	From           string             `protobuf:"bytes,10,opt,name=From,proto3" json:"From,omitempty"`
	To             string             `protobuf:"bytes,11,opt,name=To,proto3" json:"To,omitempty"`
	Pagination     *RequestPagination `protobuf:"bytes,12,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetAccountInformationReq) Reset() {
	*x = GetAccountInformationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountInformationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInformationReq) ProtoMessage() {}

func (x *GetAccountInformationReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInformationReq.ProtoReflect.Descriptor instead.
func (*GetAccountInformationReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{32}
}

func (x *GetAccountInformationReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetAccountInformationReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetAccountInformationReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetAccountInformationReq) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *GetAccountInformationReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetAccountInformationReq) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *GetAccountInformationReq) GetCoinsType() string {
	if x != nil {
		return x.CoinsType
	}
	return ""
}

func (x *GetAccountInformationReq) GetAccountSource() string {
	if x != nil {
		return x.AccountSource
	}
	return ""
}

func (x *GetAccountInformationReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *GetAccountInformationReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetAccountInformationReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetAccountInformationReq) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AccountAddresses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BtcPublicAddress string `protobuf:"bytes,1,opt,name=BtcPublicAddress,proto3" json:"BtcPublicAddress,omitempty"`
	EthPublicAddress string `protobuf:"bytes,2,opt,name=EthPublicAddress,proto3" json:"EthPublicAddress,omitempty"`
	TrxPublicAddress string `protobuf:"bytes,3,opt,name=TrxPublicAddress,proto3" json:"TrxPublicAddress,omitempty"`
	ErcPublicAddress string `protobuf:"bytes,4,opt,name=ErcPublicAddress,proto3" json:"ErcPublicAddress,omitempty"`
	TrcPublicAddress string `protobuf:"bytes,5,opt,name=TrcPublicAddress,proto3" json:"TrcPublicAddress,omitempty"`
}

func (x *AccountAddresses) Reset() {
	*x = AccountAddresses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAddresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAddresses) ProtoMessage() {}

func (x *AccountAddresses) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAddresses.ProtoReflect.Descriptor instead.
func (*AccountAddresses) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{33}
}

func (x *AccountAddresses) GetBtcPublicAddress() string {
	if x != nil {
		return x.BtcPublicAddress
	}
	return ""
}

func (x *AccountAddresses) GetEthPublicAddress() string {
	if x != nil {
		return x.EthPublicAddress
	}
	return ""
}

func (x *AccountAddresses) GetTrxPublicAddress() string {
	if x != nil {
		return x.TrxPublicAddress
	}
	return ""
}

func (x *AccountAddresses) GetErcPublicAddress() string {
	if x != nil {
		return x.ErcPublicAddress
	}
	return ""
}

func (x *AccountAddresses) GetTrcPublicAddress() string {
	if x != nil {
		return x.TrcPublicAddress
	}
	return ""
}

type LoginInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginIp       string `protobuf:"bytes,1,opt,name=LoginIp,proto3" json:"LoginIp,omitempty"`
	LoginRegion   string `protobuf:"bytes,2,opt,name=LoginRegion,proto3" json:"LoginRegion,omitempty"`
	LoginTerminal string `protobuf:"bytes,3,opt,name=LoginTerminal,proto3" json:"LoginTerminal,omitempty"`
	LoginTime     int64  `protobuf:"varint,4,opt,name=LoginTime,proto3" json:"LoginTime,omitempty"`
}

func (x *LoginInformation) Reset() {
	*x = LoginInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInformation) ProtoMessage() {}

func (x *LoginInformation) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInformation.ProtoReflect.Descriptor instead.
func (*LoginInformation) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{34}
}

func (x *LoginInformation) GetLoginIp() string {
	if x != nil {
		return x.LoginIp
	}
	return ""
}

func (x *LoginInformation) GetLoginRegion() string {
	if x != nil {
		return x.LoginRegion
	}
	return ""
}

func (x *LoginInformation) GetLoginTerminal() string {
	if x != nil {
		return x.LoginTerminal
	}
	return ""
}

func (x *LoginInformation) GetLoginTime() int64 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

type AccountAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsdAmount  float64 `protobuf:"fixed64,1,opt,name=UsdAmount,proto3" json:"UsdAmount,omitempty"`
	YuanAmount float64 `protobuf:"fixed64,2,opt,name=YuanAmount,proto3" json:"YuanAmount,omitempty"`
	EuroAmount float64 `protobuf:"fixed64,3,opt,name=EuroAmount,proto3" json:"EuroAmount,omitempty"`
}

func (x *AccountAsset) Reset() {
	*x = AccountAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAsset) ProtoMessage() {}

func (x *AccountAsset) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAsset.ProtoReflect.Descriptor instead.
func (*AccountAsset) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{35}
}

func (x *AccountAsset) GetUsdAmount() float64 {
	if x != nil {
		return x.UsdAmount
	}
	return 0
}

func (x *AccountAsset) GetYuanAmount() float64 {
	if x != nil {
		return x.YuanAmount
	}
	return 0
}

func (x *AccountAsset) GetEuroAmount() float64 {
	if x != nil {
		return x.EuroAmount
	}
	return 0
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance     string `protobuf:"bytes,1,opt,name=Balance,proto3" json:"Balance,omitempty"`
	UsdBalance  string `protobuf:"bytes,2,opt,name=UsdBalance,proto3" json:"UsdBalance,omitempty"`
	YuanBalance string `protobuf:"bytes,3,opt,name=YuanBalance,proto3" json:"YuanBalance,omitempty"`
	EuroBalance string `protobuf:"bytes,4,opt,name=EuroBalance,proto3" json:"EuroBalance,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{36}
}

func (x *Coin) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *Coin) GetUsdBalance() string {
	if x != nil {
		return x.UsdBalance
	}
	return ""
}

func (x *Coin) GetYuanBalance() string {
	if x != nil {
		return x.YuanBalance
	}
	return ""
}

func (x *Coin) GetEuroBalance() string {
	if x != nil {
		return x.EuroBalance
	}
	return ""
}

type AccountInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                       int64             `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Uid                      string            `protobuf:"bytes,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
	MerchantUid              string            `protobuf:"bytes,3,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
	AccountAddress           string            `protobuf:"bytes,4,opt,name=AccountAddress,proto3" json:"AccountAddress,omitempty"`
	CoinsType                []string          `protobuf:"bytes,5,rep,name=CoinsType,proto3" json:"CoinsType,omitempty"`
	Addresses                *AccountAddresses `protobuf:"bytes,6,opt,name=Addresses,proto3" json:"Addresses,omitempty"`
	CreationLoginInformation *LoginInformation `protobuf:"bytes,7,opt,name=CreationLoginInformation,proto3" json:"CreationLoginInformation,omitempty"`
	LastLoginInformation     *LoginInformation `protobuf:"bytes,8,opt,name=LastLoginInformation,proto3" json:"LastLoginInformation,omitempty"`
	AccountAssets            *AccountAsset     `protobuf:"bytes,9,opt,name=AccountAssets,proto3" json:"AccountAssets,omitempty"`
	Btc                      *Coin             `protobuf:"bytes,10,opt,name=Btc,proto3" json:"Btc,omitempty"`
	Eth                      *Coin             `protobuf:"bytes,11,opt,name=Eth,proto3" json:"Eth,omitempty"`
	Trx                      *Coin             `protobuf:"bytes,12,opt,name=Trx,proto3" json:"Trx,omitempty"`
	Erc                      *Coin             `protobuf:"bytes,13,opt,name=Erc,proto3" json:"Erc,omitempty"`
	Trc                      *Coin             `protobuf:"bytes,14,opt,name=Trc,proto3" json:"Trc,omitempty"`
	TotalBalance             float64           `protobuf:"fixed64,15,opt,name=TotalBalance,proto3" json:"TotalBalance,omitempty"`
	AccountSource            string            `protobuf:"bytes,16,opt,name=AccountSource,proto3" json:"AccountSource,omitempty"`
}

func (x *AccountInformation) Reset() {
	*x = AccountInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInformation) ProtoMessage() {}

func (x *AccountInformation) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInformation.ProtoReflect.Descriptor instead.
func (*AccountInformation) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{37}
}

func (x *AccountInformation) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AccountInformation) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AccountInformation) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *AccountInformation) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *AccountInformation) GetCoinsType() []string {
	if x != nil {
		return x.CoinsType
	}
	return nil
}

func (x *AccountInformation) GetAddresses() *AccountAddresses {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *AccountInformation) GetCreationLoginInformation() *LoginInformation {
	if x != nil {
		return x.CreationLoginInformation
	}
	return nil
}

func (x *AccountInformation) GetLastLoginInformation() *LoginInformation {
	if x != nil {
		return x.LastLoginInformation
	}
	return nil
}

func (x *AccountInformation) GetAccountAssets() *AccountAsset {
	if x != nil {
		return x.AccountAssets
	}
	return nil
}

func (x *AccountInformation) GetBtc() *Coin {
	if x != nil {
		return x.Btc
	}
	return nil
}

func (x *AccountInformation) GetEth() *Coin {
	if x != nil {
		return x.Eth
	}
	return nil
}

func (x *AccountInformation) GetTrx() *Coin {
	if x != nil {
		return x.Trx
	}
	return nil
}

func (x *AccountInformation) GetErc() *Coin {
	if x != nil {
		return x.Erc
	}
	return nil
}

func (x *AccountInformation) GetTrc() *Coin {
	if x != nil {
		return x.Trc
	}
	return nil
}

func (x *AccountInformation) GetTotalBalance() float64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *AccountInformation) GetAccountSource() string {
	if x != nil {
		return x.AccountSource
	}
	return ""
}

type GetAccountInformationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination    *ResponsePagination   `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	Account       []*AccountInformation `protobuf:"bytes,2,rep,name=Account,proto3" json:"Account,omitempty"`
	TotalAccounts int64                 `protobuf:"varint,3,opt,name=TotalAccounts,proto3" json:"TotalAccounts,omitempty"`
	TotalAssets   *AccountAsset         `protobuf:"bytes,4,opt,name=TotalAssets,proto3" json:"TotalAssets,omitempty"`
	BtcTotal      *Coin                 `protobuf:"bytes,5,opt,name=BtcTotal,proto3" json:"BtcTotal,omitempty"`
	EthTotal      *Coin                 `protobuf:"bytes,6,opt,name=EthTotal,proto3" json:"EthTotal,omitempty"`
	ErcTotal      *Coin                 `protobuf:"bytes,7,opt,name=ErcTotal,proto3" json:"ErcTotal,omitempty"`
	TrcTotal      *Coin                 `protobuf:"bytes,8,opt,name=TrcTotal,proto3" json:"TrcTotal,omitempty"`
	TrxTotal      *Coin                 `protobuf:"bytes,9,opt,name=TrxTotal,proto3" json:"TrxTotal,omitempty"`
}

func (x *GetAccountInformationResp) Reset() {
	*x = GetAccountInformationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountInformationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountInformationResp) ProtoMessage() {}

func (x *GetAccountInformationResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountInformationResp.ProtoReflect.Descriptor instead.
func (*GetAccountInformationResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{38}
}

func (x *GetAccountInformationResp) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAccountInformationResp) GetAccount() []*AccountInformation {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *GetAccountInformationResp) GetTotalAccounts() int64 {
	if x != nil {
		return x.TotalAccounts
	}
	return 0
}

func (x *GetAccountInformationResp) GetTotalAssets() *AccountAsset {
	if x != nil {
		return x.TotalAssets
	}
	return nil
}

func (x *GetAccountInformationResp) GetBtcTotal() *Coin {
	if x != nil {
		return x.BtcTotal
	}
	return nil
}

func (x *GetAccountInformationResp) GetEthTotal() *Coin {
	if x != nil {
		return x.EthTotal
	}
	return nil
}

func (x *GetAccountInformationResp) GetErcTotal() *Coin {
	if x != nil {
		return x.ErcTotal
	}
	return nil
}

func (x *GetAccountInformationResp) GetTrcTotal() *Coin {
	if x != nil {
		return x.TrcTotal
	}
	return nil
}

func (x *GetAccountInformationResp) GetTrxTotal() *Coin {
	if x != nil {
		return x.TrxTotal
	}
	return nil
}

type FundsLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Txid            string `protobuf:"bytes,2,opt,name=Txid,proto3" json:"Txid,omitempty"`
	TransactionType string `protobuf:"bytes,3,opt,name=TransactionType,proto3" json:"TransactionType,omitempty"`
	UserAddress     string `protobuf:"bytes,4,opt,name=UserAddress,proto3" json:"UserAddress,omitempty"`
	OppositeAddress string `protobuf:"bytes,5,opt,name=OppositeAddress,proto3" json:"OppositeAddress,omitempty"`
	// double BalanceBefore = 6;
	// double BalanceAfter = 7;
	CoinType             string `protobuf:"bytes,8,opt,name=CoinType,proto3" json:"CoinType,omitempty"`
	AmountOfCoins        string `protobuf:"bytes,9,opt,name=AmountOfCoins,proto3" json:"AmountOfCoins,omitempty"`
	UsdAmount            string `protobuf:"bytes,10,opt,name=UsdAmount,proto3" json:"UsdAmount,omitempty"`
	YuanAmount           string `protobuf:"bytes,11,opt,name=YuanAmount,proto3" json:"YuanAmount,omitempty"`
	EuroAmount           string `protobuf:"bytes,12,opt,name=EuroAmount,proto3" json:"EuroAmount,omitempty"`
	NetworkFee           string `protobuf:"bytes,13,opt,name=NetworkFee,proto3" json:"NetworkFee,omitempty"`
	UsdNetworkFee        string `protobuf:"bytes,14,opt,name=UsdNetworkFee,proto3" json:"UsdNetworkFee,omitempty"`
	YuanNetworkFee       string `protobuf:"bytes,15,opt,name=YuanNetworkFee,proto3" json:"YuanNetworkFee,omitempty"`
	EuroNetworkFee       string `protobuf:"bytes,16,opt,name=EuroNetworkFee,proto3" json:"EuroNetworkFee,omitempty"`
	TotalCoinsTransfered string `protobuf:"bytes,17,opt,name=TotalCoinsTransfered,proto3" json:"TotalCoinsTransfered,omitempty"`
	TotalUsdTransfered   string `protobuf:"bytes,18,opt,name=TotalUsdTransfered,proto3" json:"TotalUsdTransfered,omitempty"`
	TotalYuanTransfered  string `protobuf:"bytes,19,opt,name=TotalYuanTransfered,proto3" json:"TotalYuanTransfered,omitempty"`
	TotalEuroTransfered  string `protobuf:"bytes,20,opt,name=TotalEuroTransfered,proto3" json:"TotalEuroTransfered,omitempty"`
	CreationTime         int64  `protobuf:"varint,21,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
	State                string `protobuf:"bytes,22,opt,name=State,proto3" json:"State,omitempty"`
	ConfirmationTime     int64  `protobuf:"varint,23,opt,name=ConfirmationTime,proto3" json:"ConfirmationTime,omitempty"`
	Uid                  string `protobuf:"bytes,24,opt,name=Uid,proto3" json:"Uid,omitempty"`
	MerchantUid          string `protobuf:"bytes,25,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
}

func (x *FundsLog) Reset() {
	*x = FundsLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundsLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundsLog) ProtoMessage() {}

func (x *FundsLog) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundsLog.ProtoReflect.Descriptor instead.
func (*FundsLog) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{39}
}

func (x *FundsLog) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *FundsLog) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *FundsLog) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *FundsLog) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *FundsLog) GetOppositeAddress() string {
	if x != nil {
		return x.OppositeAddress
	}
	return ""
}

func (x *FundsLog) GetCoinType() string {
	if x != nil {
		return x.CoinType
	}
	return ""
}

func (x *FundsLog) GetAmountOfCoins() string {
	if x != nil {
		return x.AmountOfCoins
	}
	return ""
}

func (x *FundsLog) GetUsdAmount() string {
	if x != nil {
		return x.UsdAmount
	}
	return ""
}

func (x *FundsLog) GetYuanAmount() string {
	if x != nil {
		return x.YuanAmount
	}
	return ""
}

func (x *FundsLog) GetEuroAmount() string {
	if x != nil {
		return x.EuroAmount
	}
	return ""
}

func (x *FundsLog) GetNetworkFee() string {
	if x != nil {
		return x.NetworkFee
	}
	return ""
}

func (x *FundsLog) GetUsdNetworkFee() string {
	if x != nil {
		return x.UsdNetworkFee
	}
	return ""
}

func (x *FundsLog) GetYuanNetworkFee() string {
	if x != nil {
		return x.YuanNetworkFee
	}
	return ""
}

func (x *FundsLog) GetEuroNetworkFee() string {
	if x != nil {
		return x.EuroNetworkFee
	}
	return ""
}

func (x *FundsLog) GetTotalCoinsTransfered() string {
	if x != nil {
		return x.TotalCoinsTransfered
	}
	return ""
}

func (x *FundsLog) GetTotalUsdTransfered() string {
	if x != nil {
		return x.TotalUsdTransfered
	}
	return ""
}

func (x *FundsLog) GetTotalYuanTransfered() string {
	if x != nil {
		return x.TotalYuanTransfered
	}
	return ""
}

func (x *FundsLog) GetTotalEuroTransfered() string {
	if x != nil {
		return x.TotalEuroTransfered
	}
	return ""
}

func (x *FundsLog) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

func (x *FundsLog) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *FundsLog) GetConfirmationTime() int64 {
	if x != nil {
		return x.ConfirmationTime
	}
	return 0
}

func (x *FundsLog) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *FundsLog) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

type GetFundsLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Uid             string             `protobuf:"bytes,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
	MerchantUid     string             `protobuf:"bytes,3,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
	From            string             `protobuf:"bytes,4,opt,name=From,proto3" json:"From,omitempty"`
	To              string             `protobuf:"bytes,5,opt,name=To,proto3" json:"To,omitempty"`
	TransactionType string             `protobuf:"bytes,6,opt,name=TransactionType,proto3" json:"TransactionType,omitempty"`
	UserAddress     string             `protobuf:"bytes,7,opt,name=UserAddress,proto3" json:"UserAddress,omitempty"`
	OppositeAddress string             `protobuf:"bytes,8,opt,name=OppositeAddress,proto3" json:"OppositeAddress,omitempty"`
	CoinsType       string             `protobuf:"bytes,9,opt,name=CoinsType,proto3" json:"CoinsType,omitempty"`
	State           string             `protobuf:"bytes,10,opt,name=State,proto3" json:"State,omitempty"`
	Txid            string             `protobuf:"bytes,11,opt,name=Txid,proto3" json:"Txid,omitempty"`
	Pagination      *RequestPagination `protobuf:"bytes,12,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetFundsLogReq) Reset() {
	*x = GetFundsLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFundsLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFundsLogReq) ProtoMessage() {}

func (x *GetFundsLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFundsLogReq.ProtoReflect.Descriptor instead.
func (*GetFundsLogReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{40}
}

func (x *GetFundsLogReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetFundsLogReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetFundsLogReq) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *GetFundsLogReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetFundsLogReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetFundsLogReq) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GetFundsLogReq) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *GetFundsLogReq) GetOppositeAddress() string {
	if x != nil {
		return x.OppositeAddress
	}
	return ""
}

func (x *GetFundsLogReq) GetCoinsType() string {
	if x != nil {
		return x.CoinsType
	}
	return ""
}

func (x *GetFundsLogReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetFundsLogReq) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetFundsLogReq) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetFundsLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination    *ResponsePagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	FundLog       []*FundsLog         `protobuf:"bytes,2,rep,name=FundLog,proto3" json:"FundLog,omitempty"`
	TotalFundLogs int64               `protobuf:"varint,3,opt,name=TotalFundLogs,proto3" json:"TotalFundLogs,omitempty"`
}

func (x *GetFundsLogResp) Reset() {
	*x = GetFundsLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFundsLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFundsLogResp) ProtoMessage() {}

func (x *GetFundsLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFundsLogResp.ProtoReflect.Descriptor instead.
func (*GetFundsLogResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{41}
}

func (x *GetFundsLogResp) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetFundsLogResp) GetFundLog() []*FundsLog {
	if x != nil {
		return x.FundLog
	}
	return nil
}

func (x *GetFundsLogResp) GetTotalFundLogs() int64 {
	if x != nil {
		return x.TotalFundLogs
	}
	return 0
}

type ReceiveDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Uid              string `protobuf:"bytes,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
	MerchantUid      string `protobuf:"bytes,3,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
	Txid             string `protobuf:"bytes,4,opt,name=Txid,proto3" json:"Txid,omitempty"`
	AmountOfReceived string `protobuf:"bytes,5,opt,name=AmountOfReceived,proto3" json:"AmountOfReceived,omitempty"`
	UsdAmount        string `protobuf:"bytes,6,opt,name=UsdAmount,proto3" json:"UsdAmount,omitempty"`
	YuanAmount       string `protobuf:"bytes,7,opt,name=YuanAmount,proto3" json:"YuanAmount,omitempty"`
	EuroAmount       string `protobuf:"bytes,8,opt,name=EuroAmount,proto3" json:"EuroAmount,omitempty"`
	ReceivingAddress string `protobuf:"bytes,9,opt,name=ReceivingAddress,proto3" json:"ReceivingAddress,omitempty"`
	DepositAddress   string `protobuf:"bytes,10,opt,name=DepositAddress,proto3" json:"DepositAddress,omitempty"`
	CoinType         string `protobuf:"bytes,11,opt,name=CoinType,proto3" json:"CoinType,omitempty"`
	CreationTime     int64  `protobuf:"varint,12,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
}

func (x *ReceiveDetails) Reset() {
	*x = ReceiveDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveDetails) ProtoMessage() {}

func (x *ReceiveDetails) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveDetails.ProtoReflect.Descriptor instead.
func (*ReceiveDetails) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{42}
}

func (x *ReceiveDetails) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ReceiveDetails) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReceiveDetails) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *ReceiveDetails) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *ReceiveDetails) GetAmountOfReceived() string {
	if x != nil {
		return x.AmountOfReceived
	}
	return ""
}

func (x *ReceiveDetails) GetUsdAmount() string {
	if x != nil {
		return x.UsdAmount
	}
	return ""
}

func (x *ReceiveDetails) GetYuanAmount() string {
	if x != nil {
		return x.YuanAmount
	}
	return ""
}

func (x *ReceiveDetails) GetEuroAmount() string {
	if x != nil {
		return x.EuroAmount
	}
	return ""
}

func (x *ReceiveDetails) GetReceivingAddress() string {
	if x != nil {
		return x.ReceivingAddress
	}
	return ""
}

func (x *ReceiveDetails) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

func (x *ReceiveDetails) GetCoinType() string {
	if x != nil {
		return x.CoinType
	}
	return ""
}

func (x *ReceiveDetails) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

type GetReceiveDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	From             string             `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To               string             `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	Uid              string             `protobuf:"bytes,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
	MerchantUid      string             `protobuf:"bytes,5,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
	ReceivingAddress string             `protobuf:"bytes,6,opt,name=ReceivingAddress,proto3" json:"ReceivingAddress,omitempty"`
	CoinsType        string             `protobuf:"bytes,7,opt,name=CoinsType,proto3" json:"CoinsType,omitempty"`
	DepositAddress   string             `protobuf:"bytes,8,opt,name=DepositAddress,proto3" json:"DepositAddress,omitempty"`
	Txid             string             `protobuf:"bytes,9,opt,name=Txid,proto3" json:"Txid,omitempty"`
	Pagination       *RequestPagination `protobuf:"bytes,10,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetReceiveDetailsReq) Reset() {
	*x = GetReceiveDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReceiveDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceiveDetailsReq) ProtoMessage() {}

func (x *GetReceiveDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceiveDetailsReq.ProtoReflect.Descriptor instead.
func (*GetReceiveDetailsReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{43}
}

func (x *GetReceiveDetailsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetReceivingAddress() string {
	if x != nil {
		return x.ReceivingAddress
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetCoinsType() string {
	if x != nil {
		return x.CoinsType
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetReceiveDetailsReq) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetReceiveDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination              *ResponsePagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	ReceiveDetail           []*ReceiveDetails   `protobuf:"bytes,2,rep,name=ReceiveDetail,proto3" json:"ReceiveDetail,omitempty"`
	TotalDetails            int64               `protobuf:"varint,3,opt,name=TotalDetails,proto3" json:"TotalDetails,omitempty"`
	TotalAmountReceivedUsd  float64             `protobuf:"fixed64,4,opt,name=TotalAmountReceivedUsd,proto3" json:"TotalAmountReceivedUsd,omitempty"`
	TotalAmountReceivedYuan float64             `protobuf:"fixed64,5,opt,name=TotalAmountReceivedYuan,proto3" json:"TotalAmountReceivedYuan,omitempty"`
	TotalAmountReceivedEuro float64             `protobuf:"fixed64,6,opt,name=TotalAmountReceivedEuro,proto3" json:"TotalAmountReceivedEuro,omitempty"`
	GrandTotalUsd           float64             `protobuf:"fixed64,7,opt,name=GrandTotalUsd,proto3" json:"GrandTotalUsd,omitempty"`
	GrandTotalYuan          float64             `protobuf:"fixed64,8,opt,name=GrandTotalYuan,proto3" json:"GrandTotalYuan,omitempty"`
	GrandTotalEuro          float64             `protobuf:"fixed64,9,opt,name=GrandTotalEuro,proto3" json:"GrandTotalEuro,omitempty"`
}

func (x *GetReceiveDetailsResp) Reset() {
	*x = GetReceiveDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReceiveDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceiveDetailsResp) ProtoMessage() {}

func (x *GetReceiveDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceiveDetailsResp.ProtoReflect.Descriptor instead.
func (*GetReceiveDetailsResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{44}
}

func (x *GetReceiveDetailsResp) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetReceiveDetailsResp) GetReceiveDetail() []*ReceiveDetails {
	if x != nil {
		return x.ReceiveDetail
	}
	return nil
}

func (x *GetReceiveDetailsResp) GetTotalDetails() int64 {
	if x != nil {
		return x.TotalDetails
	}
	return 0
}

func (x *GetReceiveDetailsResp) GetTotalAmountReceivedUsd() float64 {
	if x != nil {
		return x.TotalAmountReceivedUsd
	}
	return 0
}

func (x *GetReceiveDetailsResp) GetTotalAmountReceivedYuan() float64 {
	if x != nil {
		return x.TotalAmountReceivedYuan
	}
	return 0
}

func (x *GetReceiveDetailsResp) GetTotalAmountReceivedEuro() float64 {
	if x != nil {
		return x.TotalAmountReceivedEuro
	}
	return 0
}

func (x *GetReceiveDetailsResp) GetGrandTotalUsd() float64 {
	if x != nil {
		return x.GrandTotalUsd
	}
	return 0
}

func (x *GetReceiveDetailsResp) GetGrandTotalYuan() float64 {
	if x != nil {
		return x.GrandTotalYuan
	}
	return 0
}

func (x *GetReceiveDetailsResp) GetGrandTotalEuro() float64 {
	if x != nil {
		return x.GrandTotalEuro
	}
	return 0
}

type GetTransferDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OrderBy          string             `protobuf:"bytes,2,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	From             string             `protobuf:"bytes,3,opt,name=From,proto3" json:"From,omitempty"`
	To               string             `protobuf:"bytes,4,opt,name=To,proto3" json:"To,omitempty"`
	Uid              string             `protobuf:"bytes,5,opt,name=Uid,proto3" json:"Uid,omitempty"`
	MerchantUid      string             `protobuf:"bytes,6,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
	TransferAddress  string             `protobuf:"bytes,7,opt,name=TransferAddress,proto3" json:"TransferAddress,omitempty"`
	CoinsType        string             `protobuf:"bytes,8,opt,name=CoinsType,proto3" json:"CoinsType,omitempty"`
	State            string             `protobuf:"bytes,9,opt,name=State,proto3" json:"State,omitempty"`
	ReceivingAddress string             `protobuf:"bytes,10,opt,name=ReceivingAddress,proto3" json:"ReceivingAddress,omitempty"`
	Txid             string             `protobuf:"bytes,11,opt,name=Txid,proto3" json:"Txid,omitempty"`
	Pagination       *RequestPagination `protobuf:"bytes,12,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetTransferDetailsReq) Reset() {
	*x = GetTransferDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferDetailsReq) ProtoMessage() {}

func (x *GetTransferDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferDetailsReq.ProtoReflect.Descriptor instead.
func (*GetTransferDetailsReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{45}
}

func (x *GetTransferDetailsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetTransferDetailsReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetTransferDetailsReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetTransferDetailsReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetTransferDetailsReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetTransferDetailsReq) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *GetTransferDetailsReq) GetTransferAddress() string {
	if x != nil {
		return x.TransferAddress
	}
	return ""
}

func (x *GetTransferDetailsReq) GetCoinsType() string {
	if x != nil {
		return x.CoinsType
	}
	return ""
}

func (x *GetTransferDetailsReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GetTransferDetailsReq) GetReceivingAddress() string {
	if x != nil {
		return x.ReceivingAddress
	}
	return ""
}

func (x *GetTransferDetailsReq) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetTransferDetailsReq) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetTransferDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination                *ResponsePagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	TransferDetail            []*FundsLog         `protobuf:"bytes,2,rep,name=TransferDetail,proto3" json:"TransferDetail,omitempty"`
	TotalDetails              int64               `protobuf:"varint,3,opt,name=TotalDetails,proto3" json:"TotalDetails,omitempty"`
	TotalAmountTransferedUsd  float64             `protobuf:"fixed64,4,opt,name=TotalAmountTransferedUsd,proto3" json:"TotalAmountTransferedUsd,omitempty"`
	TotalAmountTransferedYuan float64             `protobuf:"fixed64,5,opt,name=TotalAmountTransferedYuan,proto3" json:"TotalAmountTransferedYuan,omitempty"`
	TotalAmountTransferedEuro float64             `protobuf:"fixed64,6,opt,name=TotalAmountTransferedEuro,proto3" json:"TotalAmountTransferedEuro,omitempty"`
	TotalFeeAmountUsd         float64             `protobuf:"fixed64,7,opt,name=TotalFeeAmountUsd,proto3" json:"TotalFeeAmountUsd,omitempty"`
	TotalFeeAmountYuan        float64             `protobuf:"fixed64,8,opt,name=TotalFeeAmountYuan,proto3" json:"TotalFeeAmountYuan,omitempty"`
	TotalFeeAmountEuro        float64             `protobuf:"fixed64,9,opt,name=TotalFeeAmountEuro,proto3" json:"TotalFeeAmountEuro,omitempty"`
	GrandTotalUsd             float64             `protobuf:"fixed64,10,opt,name=GrandTotalUsd,proto3" json:"GrandTotalUsd,omitempty"`
	GrandTotalYuan            float64             `protobuf:"fixed64,11,opt,name=GrandTotalYuan,proto3" json:"GrandTotalYuan,omitempty"`
	GrandTotalEuro            float64             `protobuf:"fixed64,12,opt,name=GrandTotalEuro,proto3" json:"GrandTotalEuro,omitempty"`
	TotalTransferUsd          float64             `protobuf:"fixed64,13,opt,name=TotalTransferUsd,proto3" json:"TotalTransferUsd,omitempty"`
	TotalTransferYuan         float64             `protobuf:"fixed64,14,opt,name=TotalTransferYuan,proto3" json:"TotalTransferYuan,omitempty"`
	TotalTransferEuro         float64             `protobuf:"fixed64,15,opt,name=TotalTransferEuro,proto3" json:"TotalTransferEuro,omitempty"`
}

func (x *GetTransferDetailsResp) Reset() {
	*x = GetTransferDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferDetailsResp) ProtoMessage() {}

func (x *GetTransferDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferDetailsResp.ProtoReflect.Descriptor instead.
func (*GetTransferDetailsResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{46}
}

func (x *GetTransferDetailsResp) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetTransferDetailsResp) GetTransferDetail() []*FundsLog {
	if x != nil {
		return x.TransferDetail
	}
	return nil
}

func (x *GetTransferDetailsResp) GetTotalDetails() int64 {
	if x != nil {
		return x.TotalDetails
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalAmountTransferedUsd() float64 {
	if x != nil {
		return x.TotalAmountTransferedUsd
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalAmountTransferedYuan() float64 {
	if x != nil {
		return x.TotalAmountTransferedYuan
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalAmountTransferedEuro() float64 {
	if x != nil {
		return x.TotalAmountTransferedEuro
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalFeeAmountUsd() float64 {
	if x != nil {
		return x.TotalFeeAmountUsd
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalFeeAmountYuan() float64 {
	if x != nil {
		return x.TotalFeeAmountYuan
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalFeeAmountEuro() float64 {
	if x != nil {
		return x.TotalFeeAmountEuro
	}
	return 0
}

func (x *GetTransferDetailsResp) GetGrandTotalUsd() float64 {
	if x != nil {
		return x.GrandTotalUsd
	}
	return 0
}

func (x *GetTransferDetailsResp) GetGrandTotalYuan() float64 {
	if x != nil {
		return x.GrandTotalYuan
	}
	return 0
}

func (x *GetTransferDetailsResp) GetGrandTotalEuro() float64 {
	if x != nil {
		return x.GrandTotalEuro
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalTransferUsd() float64 {
	if x != nil {
		return x.TotalTransferUsd
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalTransferYuan() float64 {
	if x != nil {
		return x.TotalTransferYuan
	}
	return 0
}

func (x *GetTransferDetailsResp) GetTotalTransferEuro() float64 {
	if x != nil {
		return x.TotalTransferEuro
	}
	return 0
}

type ResetGoogleKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	UserName    string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UpdateUser  string `protobuf:"bytes,3,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
}

func (x *ResetGoogleKeyReq) Reset() {
	*x = ResetGoogleKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetGoogleKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetGoogleKeyReq) ProtoMessage() {}

func (x *ResetGoogleKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetGoogleKeyReq.ProtoReflect.Descriptor instead.
func (*ResetGoogleKeyReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{47}
}

func (x *ResetGoogleKeyReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ResetGoogleKeyReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ResetGoogleKeyReq) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type GetRoleActionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	RoleName    string `protobuf:"bytes,2,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
}

func (x *GetRoleActionsReq) Reset() {
	*x = GetRoleActionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleActionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleActionsReq) ProtoMessage() {}

func (x *GetRoleActionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleActionsReq.ProtoReflect.Descriptor instead.
func (*GetRoleActionsReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{48}
}

func (x *GetRoleActionsReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetRoleActionsReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type GetRoleActionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []int64 `protobuf:"varint,1,rep,packed,name=Actions,proto3" json:"Actions,omitempty"`
}

func (x *GetRoleActionsResp) Reset() {
	*x = GetRoleActionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleActionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleActionsResp) ProtoMessage() {}

func (x *GetRoleActionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleActionsResp.ProtoReflect.Descriptor instead.
func (*GetRoleActionsResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{49}
}

func (x *GetRoleActionsResp) GetActions() []int64 {
	if x != nil {
		return x.Actions
	}
	return nil
}

type GetCurrenciesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Pagination  *RequestPagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetCurrenciesReq) Reset() {
	*x = GetCurrenciesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrenciesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesReq) ProtoMessage() {}

func (x *GetCurrenciesReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesReq.ProtoReflect.Descriptor instead.
func (*GetCurrenciesReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{50}
}

func (x *GetCurrenciesReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetCurrenciesReq) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CoinType       string `protobuf:"bytes,2,opt,name=CoinType,proto3" json:"CoinType,omitempty"`
	LastEditedTime int64  `protobuf:"varint,3,opt,name=LastEditedTime,proto3" json:"LastEditedTime,omitempty"`
	Editor         string `protobuf:"bytes,4,opt,name=Editor,proto3" json:"Editor,omitempty"`
	State          int32  `protobuf:"varint,5,opt,name=State,proto3" json:"State,omitempty"`
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{51}
}

func (x *Currency) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Currency) GetCoinType() string {
	if x != nil {
		return x.CoinType
	}
	return ""
}

func (x *Currency) GetLastEditedTime() int64 {
	if x != nil {
		return x.LastEditedTime
	}
	return 0
}

func (x *Currency) GetEditor() string {
	if x != nil {
		return x.Editor
	}
	return ""
}

func (x *Currency) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type GetCurrenciesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies      []*Currency         `protobuf:"bytes,1,rep,name=Currencies,proto3" json:"Currencies,omitempty"`
	Pagination      *ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	TotalCurrencies int64               `protobuf:"varint,3,opt,name=TotalCurrencies,proto3" json:"TotalCurrencies,omitempty"`
}

func (x *GetCurrenciesResp) Reset() {
	*x = GetCurrenciesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrenciesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesResp) ProtoMessage() {}

func (x *GetCurrenciesResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesResp.ProtoReflect.Descriptor instead.
func (*GetCurrenciesResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{52}
}

func (x *GetCurrenciesResp) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *GetCurrenciesResp) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetCurrenciesResp) GetTotalCurrencies() int64 {
	if x != nil {
		return x.TotalCurrencies
	}
	return 0
}

type UpdateCurrencyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	State       int32  `protobuf:"varint,2,opt,name=State,proto3" json:"State,omitempty"`
	CurrencyId  int32  `protobuf:"varint,3,opt,name=CurrencyId,proto3" json:"CurrencyId,omitempty"`
	UpdateUser  string `protobuf:"bytes,4,opt,name=UpdateUser,proto3" json:"UpdateUser,omitempty"`
}

func (x *UpdateCurrencyReq) Reset() {
	*x = UpdateCurrencyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCurrencyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyReq) ProtoMessage() {}

func (x *UpdateCurrencyReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyReq.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateCurrencyReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UpdateCurrencyReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UpdateCurrencyReq) GetCurrencyId() int32 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *UpdateCurrencyReq) GetUpdateUser() string {
	if x != nil {
		return x.UpdateUser
	}
	return ""
}

type CreateAccountInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID           string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	MerchantId            string  `protobuf:"bytes,2,opt,name=MerchantId,proto3" json:"MerchantId,omitempty"`
	BtcPublicAddress      string  `protobuf:"bytes,3,opt,name=BtcPublicAddress,proto3" json:"BtcPublicAddress,omitempty"`
	EthPublicAddress      string  `protobuf:"bytes,4,opt,name=EthPublicAddress,proto3" json:"EthPublicAddress,omitempty"`
	TrxPublicAddress      string  `protobuf:"bytes,5,opt,name=TrxPublicAddress,proto3" json:"TrxPublicAddress,omitempty"`
	ErcPublicAddress      string  `protobuf:"bytes,6,opt,name=ErcPublicAddress,proto3" json:"ErcPublicAddress,omitempty"`
	TrcPublicAddress      string  `protobuf:"bytes,7,opt,name=TrcPublicAddress,proto3" json:"TrcPublicAddress,omitempty"`
	BtcBalance            float64 `protobuf:"fixed64,8,opt,name=BtcBalance,proto3" json:"BtcBalance,omitempty"`
	EthBalance            float64 `protobuf:"fixed64,9,opt,name=EthBalance,proto3" json:"EthBalance,omitempty"`
	TrxBalance            float64 `protobuf:"fixed64,10,opt,name=TrxBalance,proto3" json:"TrxBalance,omitempty"`
	ErcBalance            float64 `protobuf:"fixed64,11,opt,name=ErcBalance,proto3" json:"ErcBalance,omitempty"`
	TrcBalance            float64 `protobuf:"fixed64,12,opt,name=TrcBalance,proto3" json:"TrcBalance,omitempty"`
	AccountSource         string  `protobuf:"bytes,13,opt,name=AccountSource,proto3" json:"AccountSource,omitempty"`
	CreationLoginIp       string  `protobuf:"bytes,14,opt,name=CreationLoginIp,proto3" json:"CreationLoginIp,omitempty"`
	CreationLoginRegion   string  `protobuf:"bytes,15,opt,name=CreationLoginRegion,proto3" json:"CreationLoginRegion,omitempty"`
	CreationLoginTerminal string  `protobuf:"bytes,16,opt,name=CreationLoginTerminal,proto3" json:"CreationLoginTerminal,omitempty"`
	CreationLoginTime     int64   `protobuf:"varint,17,opt,name=CreationLoginTime,proto3" json:"CreationLoginTime,omitempty"`
	LastLoginIp           string  `protobuf:"bytes,18,opt,name=LastLoginIp,proto3" json:"LastLoginIp,omitempty"`
	LastLoginRegion       string  `protobuf:"bytes,19,opt,name=LastLoginRegion,proto3" json:"LastLoginRegion,omitempty"`
	LastLoginTerminal     string  `protobuf:"bytes,20,opt,name=LastLoginTerminal,proto3" json:"LastLoginTerminal,omitempty"`
	LastLoginTime         int64   `protobuf:"varint,21,opt,name=LastLoginTime,proto3" json:"LastLoginTime,omitempty"`
}

func (x *CreateAccountInfoReq) Reset() {
	*x = CreateAccountInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountInfoReq) ProtoMessage() {}

func (x *CreateAccountInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountInfoReq.ProtoReflect.Descriptor instead.
func (*CreateAccountInfoReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{54}
}

func (x *CreateAccountInfoReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreateAccountInfoReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateAccountInfoReq) GetBtcPublicAddress() string {
	if x != nil {
		return x.BtcPublicAddress
	}
	return ""
}

func (x *CreateAccountInfoReq) GetEthPublicAddress() string {
	if x != nil {
		return x.EthPublicAddress
	}
	return ""
}

func (x *CreateAccountInfoReq) GetTrxPublicAddress() string {
	if x != nil {
		return x.TrxPublicAddress
	}
	return ""
}

func (x *CreateAccountInfoReq) GetErcPublicAddress() string {
	if x != nil {
		return x.ErcPublicAddress
	}
	return ""
}

func (x *CreateAccountInfoReq) GetTrcPublicAddress() string {
	if x != nil {
		return x.TrcPublicAddress
	}
	return ""
}

func (x *CreateAccountInfoReq) GetBtcBalance() float64 {
	if x != nil {
		return x.BtcBalance
	}
	return 0
}

func (x *CreateAccountInfoReq) GetEthBalance() float64 {
	if x != nil {
		return x.EthBalance
	}
	return 0
}

func (x *CreateAccountInfoReq) GetTrxBalance() float64 {
	if x != nil {
		return x.TrxBalance
	}
	return 0
}

func (x *CreateAccountInfoReq) GetErcBalance() float64 {
	if x != nil {
		return x.ErcBalance
	}
	return 0
}

func (x *CreateAccountInfoReq) GetTrcBalance() float64 {
	if x != nil {
		return x.TrcBalance
	}
	return 0
}

func (x *CreateAccountInfoReq) GetAccountSource() string {
	if x != nil {
		return x.AccountSource
	}
	return ""
}

func (x *CreateAccountInfoReq) GetCreationLoginIp() string {
	if x != nil {
		return x.CreationLoginIp
	}
	return ""
}

func (x *CreateAccountInfoReq) GetCreationLoginRegion() string {
	if x != nil {
		return x.CreationLoginRegion
	}
	return ""
}

func (x *CreateAccountInfoReq) GetCreationLoginTerminal() string {
	if x != nil {
		return x.CreationLoginTerminal
	}
	return ""
}

func (x *CreateAccountInfoReq) GetCreationLoginTime() int64 {
	if x != nil {
		return x.CreationLoginTime
	}
	return 0
}

func (x *CreateAccountInfoReq) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *CreateAccountInfoReq) GetLastLoginRegion() string {
	if x != nil {
		return x.LastLoginRegion
	}
	return ""
}

func (x *CreateAccountInfoReq) GetLastLoginTerminal() string {
	if x != nil {
		return x.LastLoginTerminal
	}
	return ""
}

func (x *CreateAccountInfoReq) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

type CreateAccountInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
}

func (x *CreateAccountInfoResp) Reset() {
	*x = CreateAccountInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountInfoResp) ProtoMessage() {}

func (x *CreateAccountInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountInfoResp.ProtoReflect.Descriptor instead.
func (*CreateAccountInfoResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{55}
}

func (x *CreateAccountInfoResp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CreateFundLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID     string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Uuid            string  `protobuf:"bytes,2,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	MerchantId      string  `protobuf:"bytes,3,opt,name=MerchantId,proto3" json:"MerchantId,omitempty"`
	Txid            string  `protobuf:"bytes,4,opt,name=Txid,proto3" json:"Txid,omitempty"`
	TransactionType string  `protobuf:"bytes,5,opt,name=TransactionType,proto3" json:"TransactionType,omitempty"`
	UserAddress     string  `protobuf:"bytes,6,opt,name=UserAddress,proto3" json:"UserAddress,omitempty"`
	OppositeAddress string  `protobuf:"bytes,7,opt,name=OppositeAddress,proto3" json:"OppositeAddress,omitempty"`
	BalanceBefore   float64 `protobuf:"fixed64,8,opt,name=BalanceBefore,proto3" json:"BalanceBefore,omitempty"`
	BalanceAfter    float64 `protobuf:"fixed64,9,opt,name=BalanceAfter,proto3" json:"BalanceAfter,omitempty"`
	CoinType        string  `protobuf:"bytes,10,opt,name=CoinType,proto3" json:"CoinType,omitempty"`
	AmountOfCoins   float64 `protobuf:"fixed64,11,opt,name=AmountOfCoins,proto3" json:"AmountOfCoins,omitempty"`
	NetworkFee      float64 `protobuf:"fixed64,12,opt,name=NetworkFee,proto3" json:"NetworkFee,omitempty"`
	CreationTime    int64   `protobuf:"varint,13,opt,name=CreationTime,proto3" json:"CreationTime,omitempty"`
}

func (x *CreateFundLogReq) Reset() {
	*x = CreateFundLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFundLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFundLogReq) ProtoMessage() {}

func (x *CreateFundLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFundLogReq.ProtoReflect.Descriptor instead.
func (*CreateFundLogReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{56}
}

func (x *CreateFundLogReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreateFundLogReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CreateFundLogReq) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreateFundLogReq) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CreateFundLogReq) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *CreateFundLogReq) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *CreateFundLogReq) GetOppositeAddress() string {
	if x != nil {
		return x.OppositeAddress
	}
	return ""
}

func (x *CreateFundLogReq) GetBalanceBefore() float64 {
	if x != nil {
		return x.BalanceBefore
	}
	return 0
}

func (x *CreateFundLogReq) GetBalanceAfter() float64 {
	if x != nil {
		return x.BalanceAfter
	}
	return 0
}

func (x *CreateFundLogReq) GetCoinType() string {
	if x != nil {
		return x.CoinType
	}
	return ""
}

func (x *CreateFundLogReq) GetAmountOfCoins() float64 {
	if x != nil {
		return x.AmountOfCoins
	}
	return 0
}

func (x *CreateFundLogReq) GetNetworkFee() float64 {
	if x != nil {
		return x.NetworkFee
	}
	return 0
}

func (x *CreateFundLogReq) GetCreationTime() int64 {
	if x != nil {
		return x.CreationTime
	}
	return 0
}

type CreateFundLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFundLogResp) Reset() {
	*x = CreateFundLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFundLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFundLogResp) ProtoMessage() {}

func (x *CreateFundLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFundLogResp.ProtoReflect.Descriptor instead.
func (*CreateFundLogResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{57}
}

type UpdateFundLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID      string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Txid             string  `protobuf:"bytes,2,opt,name=Txid,proto3" json:"Txid,omitempty"`
	BalanceAfter     float64 `protobuf:"fixed64,3,opt,name=BalanceAfter,proto3" json:"BalanceAfter,omitempty"`
	State            string  `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	ConfirmationTime int64   `protobuf:"varint,5,opt,name=ConfirmationTime,proto3" json:"ConfirmationTime,omitempty"`
}

func (x *UpdateFundLogReq) Reset() {
	*x = UpdateFundLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFundLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFundLogReq) ProtoMessage() {}

func (x *UpdateFundLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFundLogReq.ProtoReflect.Descriptor instead.
func (*UpdateFundLogReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateFundLogReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UpdateFundLogReq) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *UpdateFundLogReq) GetBalanceAfter() float64 {
	if x != nil {
		return x.BalanceAfter
	}
	return 0
}

func (x *UpdateFundLogReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UpdateFundLogReq) GetConfirmationTime() int64 {
	if x != nil {
		return x.ConfirmationTime
	}
	return 0
}

type GetOperationalReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string             `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	From        string             `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To          string             `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	Pagination  *RequestPagination `protobuf:"bytes,4,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
}

func (x *GetOperationalReportReq) Reset() {
	*x = GetOperationalReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationalReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationalReportReq) ProtoMessage() {}

func (x *GetOperationalReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationalReportReq.ProtoReflect.Descriptor instead.
func (*GetOperationalReportReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{59}
}

func (x *GetOperationalReportReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetOperationalReportReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetOperationalReportReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *GetOperationalReportReq) GetPagination() *RequestPagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountAssets *AccountAsset `protobuf:"bytes,1,opt,name=AccountAssets,proto3" json:"AccountAssets,omitempty"`
	Btc           *Coin         `protobuf:"bytes,2,opt,name=Btc,proto3" json:"Btc,omitempty"`
	Eth           *Coin         `protobuf:"bytes,3,opt,name=Eth,proto3" json:"Eth,omitempty"`
	Trx           *Coin         `protobuf:"bytes,4,opt,name=Trx,proto3" json:"Trx,omitempty"`
	Erc           *Coin         `protobuf:"bytes,5,opt,name=Erc,proto3" json:"Erc,omitempty"`
	Trc           *Coin         `protobuf:"bytes,6,opt,name=Trc,proto3" json:"Trc,omitempty"`
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{60}
}

func (x *Statistics) GetAccountAssets() *AccountAsset {
	if x != nil {
		return x.AccountAssets
	}
	return nil
}

func (x *Statistics) GetBtc() *Coin {
	if x != nil {
		return x.Btc
	}
	return nil
}

func (x *Statistics) GetEth() *Coin {
	if x != nil {
		return x.Eth
	}
	return nil
}

func (x *Statistics) GetTrx() *Coin {
	if x != nil {
		return x.Trx
	}
	return nil
}

func (x *Statistics) GetErc() *Coin {
	if x != nil {
		return x.Erc
	}
	return nil
}

func (x *Statistics) GetTrc() *Coin {
	if x != nil {
		return x.Trc
	}
	return nil
}

type OperationalReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date            string      `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	NewUsers        int64       `protobuf:"varint,2,opt,name=NewUsers,proto3" json:"NewUsers,omitempty"`
	TotalReceived   *Statistics `protobuf:"bytes,3,opt,name=TotalReceived,proto3" json:"TotalReceived,omitempty"`
	TotalTransfered *Statistics `protobuf:"bytes,4,opt,name=TotalTransfered,proto3" json:"TotalTransfered,omitempty"`
	NetworkFee      *Statistics `protobuf:"bytes,5,opt,name=NetworkFee,proto3" json:"NetworkFee,omitempty"`
}

func (x *OperationalReport) Reset() {
	*x = OperationalReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationalReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationalReport) ProtoMessage() {}

func (x *OperationalReport) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationalReport.ProtoReflect.Descriptor instead.
func (*OperationalReport) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{61}
}

func (x *OperationalReport) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *OperationalReport) GetNewUsers() int64 {
	if x != nil {
		return x.NewUsers
	}
	return 0
}

func (x *OperationalReport) GetTotalReceived() *Statistics {
	if x != nil {
		return x.TotalReceived
	}
	return nil
}

func (x *OperationalReport) GetTotalTransfered() *Statistics {
	if x != nil {
		return x.TotalTransfered
	}
	return nil
}

func (x *OperationalReport) GetNetworkFee() *Statistics {
	if x != nil {
		return x.NetworkFee
	}
	return nil
}

type GetOperationalReportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationalReports []*OperationalReport `protobuf:"bytes,1,rep,name=OperationalReports,proto3" json:"OperationalReports,omitempty"`
	GrandTotals        *OperationalReport   `protobuf:"bytes,2,opt,name=GrandTotals,proto3" json:"GrandTotals,omitempty"`
	TotalAssets        *AccountAsset        `protobuf:"bytes,3,opt,name=TotalAssets,proto3" json:"TotalAssets,omitempty"`
	Pagination         *ResponsePagination  `protobuf:"bytes,4,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	TotalNum           int32                `protobuf:"varint,5,opt,name=TotalNum,proto3" json:"TotalNum,omitempty"`
	TotalUsers         int64                `protobuf:"varint,6,opt,name=TotalUsers,proto3" json:"TotalUsers,omitempty"`
	NewUsersToday      int64                `protobuf:"varint,7,opt,name=NewUsersToday,proto3" json:"NewUsersToday,omitempty"`
}

func (x *GetOperationalReportResp) Reset() {
	*x = GetOperationalReportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationalReportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationalReportResp) ProtoMessage() {}

func (x *GetOperationalReportResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationalReportResp.ProtoReflect.Descriptor instead.
func (*GetOperationalReportResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{62}
}

func (x *GetOperationalReportResp) GetOperationalReports() []*OperationalReport {
	if x != nil {
		return x.OperationalReports
	}
	return nil
}

func (x *GetOperationalReportResp) GetGrandTotals() *OperationalReport {
	if x != nil {
		return x.GrandTotals
	}
	return nil
}

func (x *GetOperationalReportResp) GetTotalAssets() *AccountAsset {
	if x != nil {
		return x.TotalAssets
	}
	return nil
}

func (x *GetOperationalReportResp) GetPagination() *ResponsePagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetOperationalReportResp) GetTotalNum() int32 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *GetOperationalReportResp) GetTotalUsers() int64 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *GetOperationalReportResp) GetNewUsersToday() int64 {
	if x != nil {
		return x.NewUsersToday
	}
	return 0
}

type UpdateAccountBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID  string  `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	MerchantUid  string  `protobuf:"bytes,2,opt,name=MerchantUid,proto3" json:"MerchantUid,omitempty"`
	Uuid         string  `protobuf:"bytes,3,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	BtcBalance   float64 `protobuf:"fixed64,4,opt,name=BtcBalance,proto3" json:"BtcBalance,omitempty"`
	EthBalance   float64 `protobuf:"fixed64,5,opt,name=EthBalance,proto3" json:"EthBalance,omitempty"`
	Erc20Balance float64 `protobuf:"fixed64,6,opt,name=Erc20Balance,proto3" json:"Erc20Balance,omitempty"`
	TrxBalance   float64 `protobuf:"fixed64,7,opt,name=TrxBalance,proto3" json:"TrxBalance,omitempty"`
	Trc20Balance float64 `protobuf:"fixed64,8,opt,name=Trc20Balance,proto3" json:"Trc20Balance,omitempty"`
	MessageID    string  `protobuf:"bytes,9,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
}

func (x *UpdateAccountBalanceReq) Reset() {
	*x = UpdateAccountBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountBalanceReq) ProtoMessage() {}

func (x *UpdateAccountBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountBalanceReq.ProtoReflect.Descriptor instead.
func (*UpdateAccountBalanceReq) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{63}
}

func (x *UpdateAccountBalanceReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *UpdateAccountBalanceReq) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *UpdateAccountBalanceReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateAccountBalanceReq) GetBtcBalance() float64 {
	if x != nil {
		return x.BtcBalance
	}
	return 0
}

func (x *UpdateAccountBalanceReq) GetEthBalance() float64 {
	if x != nil {
		return x.EthBalance
	}
	return 0
}

func (x *UpdateAccountBalanceReq) GetErc20Balance() float64 {
	if x != nil {
		return x.Erc20Balance
	}
	return 0
}

func (x *UpdateAccountBalanceReq) GetTrxBalance() float64 {
	if x != nil {
		return x.TrxBalance
	}
	return 0
}

func (x *UpdateAccountBalanceReq) GetTrc20Balance() float64 {
	if x != nil {
		return x.Trc20Balance
	}
	return 0
}

func (x *UpdateAccountBalanceReq) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

type UpdateAccountBalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountInformation `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
}

func (x *UpdateAccountBalanceResp) Reset() {
	*x = UpdateAccountBalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_admin_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountBalanceResp) ProtoMessage() {}

func (x *UpdateAccountBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountBalanceResp.ProtoReflect.Descriptor instead.
func (*UpdateAccountBalanceResp) Descriptor() ([]byte, []int) {
	return file_admin_admin_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateAccountBalanceResp) GetAccount() *AccountInformation {
	if x != nil {
		return x.Account
	}
	return nil
}

var File_admin_admin_proto protoreflect.FileDescriptor

var file_admin_admin_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x2d, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x47, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x47, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x49, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x70, 0x22, 0xc9, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x47, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x47, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x2e, 0x0a, 0x12, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x47, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x47, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x50, 0x72,
	0x6f, 0x76, 0x55, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x47, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x76, 0x55, 0x72, 0x69, 0x12, 0x1f,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x22,
	0x58, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x9e, 0x02, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x47, 0x41, 0x75, 0x74, 0x68,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x22, 0x90, 0x01, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x65, 0x77,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x22, 0xc3, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x09, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x50, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x77, 0x6f, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0xb7, 0x02,
	0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x89, 0x02, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x43, 0x0a, 0x11, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x44, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x84, 0x02, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x54, 0x77, 0x6f, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x76, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x72, 0x0a,
	0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x50, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x3a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x33, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x2f, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x53, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x70, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x80, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x54, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x38, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xee, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x42,
	0x74, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x74, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x74, 0x68, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x45, 0x74, 0x68, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x72, 0x78, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x54,
	0x72, 0x78, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x45, 0x72, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x45, 0x72, 0x63, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x54,
	0x72, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x54, 0x72, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x0c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x55, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x59, 0x75,
	0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x59, 0x75, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x75,
	0x72, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x45, 0x75, 0x72, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x04, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x55, 0x73, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x55, 0x73, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x59, 0x75, 0x61, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x59, 0x75, 0x61, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x45, 0x75, 0x72, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x75, 0x72, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x97, 0x05, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x09,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b,
	0x0a, 0x14, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0d, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x03, 0x42, 0x74, 0x63, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x52, 0x03, 0x42, 0x74, 0x63, 0x12, 0x1d, 0x0a, 0x03, 0x45, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52,
	0x03, 0x45, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x03, 0x54, 0x72, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x03,
	0x54, 0x72, 0x78, 0x12, 0x1d, 0x0a, 0x03, 0x45, 0x72, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x03, 0x45,
	0x72, 0x63, 0x12, 0x1d, 0x0a, 0x03, 0x54, 0x72, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x03, 0x54, 0x72,
	0x63, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb5, 0x03, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x35, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x42, 0x74, 0x63, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x08, 0x42, 0x74, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x27, 0x0a, 0x08, 0x45, 0x74, 0x68, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x08,
	0x45, 0x74, 0x68, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x08, 0x45, 0x72, 0x63, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x08, 0x45, 0x72, 0x63, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x27, 0x0a, 0x08, 0x54, 0x72, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x52, 0x08, 0x54, 0x72, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x08, 0x54, 0x72,
	0x78, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x08, 0x54, 0x72, 0x78, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0xbc, 0x06, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4c, 0x6f, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x78, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x70, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f, 0x70, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x66, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x55, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x55, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x59, 0x75,
	0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x59, 0x75, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x75,
	0x72, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x45, 0x75, 0x72, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73,
	0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x55, 0x73, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x59, 0x75, 0x61, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46,
	0x65, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x59, 0x75, 0x61, 0x6e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x75, 0x72, 0x6f,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x45, 0x75, 0x72, 0x6f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65,
	0x12, 0x32, 0x0a, 0x14, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x59, 0x75, 0x61,
	0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x59, 0x75, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45,
	0x75, 0x72, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x75, 0x72, 0x6f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55,
	0x69, 0x64, 0x22, 0x82, 0x03, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x46,
	0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12,
	0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4f,
	0x70, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f, 0x70, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x78, 0x69, 0x64, 0x12, 0x38, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46,
	0x75, 0x6e, 0x64, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x46, 0x75, 0x6e, 0x64, 0x4c, 0x6f,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x07, 0x46, 0x75, 0x6e, 0x64, 0x4c, 0x6f,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x64, 0x4c, 0x6f,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46,
	0x75, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0x86, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x78, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x78,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x55, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x59, 0x75, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x59, 0x75, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x45, 0x75, 0x72, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x45, 0x75, 0x72, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e,
	0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xd0, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x46,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x78, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xd5, 0x03, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x55, 0x73, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x55, 0x73,
	0x64, 0x12, 0x38, 0x0a, 0x17, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x59, 0x75, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x17, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x59, 0x75, 0x61, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x45, 0x75, 0x72, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x45, 0x75, 0x72, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x73, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x47, 0x72,
	0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x47,
	0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x59, 0x75, 0x61, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x59,
	0x75, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x45, 0x75, 0x72, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x47, 0x72, 0x61,
	0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x75, 0x72, 0x6f, 0x22, 0x83, 0x03, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x78, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xf4, 0x05, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4c, 0x6f, 0x67,
	0x52, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x55, 0x73, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x55, 0x73, 0x64,
	0x12, 0x3c, 0x0a, 0x19, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x59, 0x75, 0x61, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x19, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x59, 0x75, 0x61, 0x6e, 0x12, 0x3c,
	0x0a, 0x19, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x45, 0x75, 0x72, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x19, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x45, 0x75, 0x72, 0x6f, 0x12, 0x2c, 0x0a, 0x11,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x59, 0x75, 0x61, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x59, 0x75, 0x61, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x75, 0x72, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x75, 0x72, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x72,
	0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x59, 0x75,
	0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x59, 0x75, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x72, 0x61, 0x6e,
	0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x75, 0x72, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x75, 0x72, 0x6f,
	0x12, 0x2a, 0x0a, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x55, 0x73, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x73, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x59, 0x75, 0x61,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x59, 0x75, 0x61, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x75, 0x72, 0x6f, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x45, 0x75, 0x72, 0x6f, 0x22, 0x71, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6e,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8c,
	0x01, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x61, 0x73, 0x74, 0x45,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa9, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0xda, 0x06, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x42, 0x74, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x74,
	0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x45, 0x74, 0x68, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x45, 0x74, 0x68, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x72,
	0x78, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x54, 0x72, 0x78, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x72, 0x63, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x45, 0x72, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x72, 0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x54, 0x72,
	0x63, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x42, 0x74, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x42, 0x74, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x45, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x45, 0x74, 0x68, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x72, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x54, 0x72, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x45, 0x72, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x45, 0x72, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x72, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x54, 0x72, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x30,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x34, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x24,
	0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69,
	0x64, 0x22, 0xc2, 0x03, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x64,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x78, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x78, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x4f, 0x70, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f, 0x70, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x69,
	0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46,
	0x65, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x75, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0xae, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x78, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x38,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x12, 0x1d, 0x0a, 0x03, 0x42, 0x74, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x03, 0x42, 0x74,
	0x63, 0x12, 0x1d, 0x0a, 0x03, 0x45, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x03, 0x45, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x03, 0x54, 0x72, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x03, 0x54, 0x72, 0x78, 0x12,
	0x1d, 0x0a, 0x03, 0x45, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x03, 0x45, 0x72, 0x63, 0x12, 0x1d,
	0x0a, 0x03, 0x54, 0x72, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x03, 0x54, 0x72, 0x63, 0x22, 0xec, 0x01,
	0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4e, 0x65, 0x77, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0d, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0f,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x0a, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x65, 0x65, 0x22, 0xf4, 0x02, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x12, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x12, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x0b, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x12,
	0x35, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x73, 0x54, 0x6f,
	0x64, 0x61, 0x79, 0x22, 0xb7, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x74, 0x63, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x42, 0x74, 0x63,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x74, 0x68, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x45, 0x74, 0x68,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x63, 0x32, 0x30,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x45,
	0x72, 0x63, 0x32, 0x30, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54,
	0x72, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x54, 0x72, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54,
	0x72, 0x63, 0x32, 0x30, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x54, 0x72, 0x63, 0x32, 0x30, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0x4f, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xd1,
	0x0d, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x33, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x50, 0x43, 0x12, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x15,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3b, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x32, 0x12,
	0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e,
	0x64, 0x73, 0x4c, 0x6f, 0x67, 0x12, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x17,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x3b, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_admin_proto_rawDescOnce sync.Once
	file_admin_admin_proto_rawDescData = file_admin_admin_proto_rawDesc
)

func file_admin_admin_proto_rawDescGZIP() []byte {
	file_admin_admin_proto_rawDescOnce.Do(func() {
		file_admin_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_admin_proto_rawDescData)
	})
	return file_admin_admin_proto_rawDescData
}

var file_admin_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_admin_admin_proto_goTypes = []interface{}{
	(*CommonReq)(nil),                   // 0: admin.CommonReq
	(*CommonResp)(nil),                  // 1: admin.CommonResp
	(*AdminLoginReq)(nil),               // 2: admin.AdminLoginReq
	(*AdminLoginResp)(nil),              // 3: admin.AdminLoginResp
	(*User)(nil),                        // 4: admin.User
	(*AddAdminUserResp)(nil),            // 5: admin.AddAdminUserResp
	(*AddAdminUserReq)(nil),             // 6: admin.AddAdminUserReq
	(*ChangeAdminUserPasswordReq)(nil),  // 7: admin.ChangeAdminUserPasswordReq
	(*ChangeAdminUserPasswordResp)(nil), // 8: admin.ChangeAdminUserPasswordResp
	(*GetAdminUserListReq)(nil),         // 9: admin.GetAdminUserListReq
	(*GetAdminUserListResp)(nil),        // 10: admin.GetAdminUserListResp
	(*GetAdminUserRoleReq)(nil),         // 11: admin.GetAdminUserRoleReq
	(*GetAdminUserRoleResp)(nil),        // 12: admin.GetAdminUserRoleResp
	(*AdminUser)(nil),                   // 13: admin.AdminUser
	(*AdminUserRole)(nil),               // 14: admin.AdminUserRole
	(*AddAdminUserRoleReq)(nil),         // 15: admin.AddAdminUserRoleReq
	(*AddAdminRoleResp)(nil),            // 16: admin.AddAdminRoleResp
	(*RequestPagination)(nil),           // 17: admin.RequestPagination
	(*ResponsePagination)(nil),          // 18: admin.ResponsePagination
	(*DeleteAdminReq)(nil),              // 19: admin.DeleteAdminReq
	(*UpdateAdminReq)(nil),              // 20: admin.UpdateAdminReq
	(*UpdateAdminResp)(nil),             // 21: admin.UpdateAdminResp
	(*UpdateAdminRoleRequest)(nil),      // 22: admin.UpdateAdminRoleRequest
	(*UpdateAdminRoleResponse)(nil),     // 23: admin.UpdateAdminRoleResponse
	(*DeleteAdminRoleRequest)(nil),      // 24: admin.DeleteAdminRoleRequest
	(*AdminActions)(nil),                // 25: admin.AdminActions
	(*GetAdminActionsRequest)(nil),      // 26: admin.GetAdminActionsRequest
	(*GetAdminActionsResponse)(nil),     // 27: admin.GetAdminActionsResponse
	(*NewAction)(nil),                   // 28: admin.NewAction
	(*Action)(nil),                      // 29: admin.Action
	(*GetAdminUserRequest)(nil),         // 30: admin.GetAdminUserRequest
	(*GetAdminUserResponse)(nil),        // 31: admin.GetAdminUserResponse
	(*GetAccountInformationReq)(nil),    // 32: admin.GetAccountInformationReq
	(*AccountAddresses)(nil),            // 33: admin.AccountAddresses
	(*LoginInformation)(nil),            // 34: admin.LoginInformation
	(*AccountAsset)(nil),                // 35: admin.AccountAsset
	(*Coin)(nil),                        // 36: admin.Coin
	(*AccountInformation)(nil),          // 37: admin.AccountInformation
	(*GetAccountInformationResp)(nil),   // 38: admin.GetAccountInformationResp
	(*FundsLog)(nil),                    // 39: admin.FundsLog
	(*GetFundsLogReq)(nil),              // 40: admin.GetFundsLogReq
	(*GetFundsLogResp)(nil),             // 41: admin.GetFundsLogResp
	(*ReceiveDetails)(nil),              // 42: admin.ReceiveDetails
	(*GetReceiveDetailsReq)(nil),        // 43: admin.GetReceiveDetailsReq
	(*GetReceiveDetailsResp)(nil),       // 44: admin.GetReceiveDetailsResp
	(*GetTransferDetailsReq)(nil),       // 45: admin.GetTransferDetailsReq
	(*GetTransferDetailsResp)(nil),      // 46: admin.GetTransferDetailsResp
	(*ResetGoogleKeyReq)(nil),           // 47: admin.ResetGoogleKeyReq
	(*GetRoleActionsReq)(nil),           // 48: admin.GetRoleActionsReq
	(*GetRoleActionsResp)(nil),          // 49: admin.GetRoleActionsResp
	(*GetCurrenciesReq)(nil),            // 50: admin.GetCurrenciesReq
	(*Currency)(nil),                    // 51: admin.Currency
	(*GetCurrenciesResp)(nil),           // 52: admin.GetCurrenciesResp
	(*UpdateCurrencyReq)(nil),           // 53: admin.UpdateCurrencyReq
	(*CreateAccountInfoReq)(nil),        // 54: admin.CreateAccountInfoReq
	(*CreateAccountInfoResp)(nil),       // 55: admin.CreateAccountInfoResp
	(*CreateFundLogReq)(nil),            // 56: admin.CreateFundLogReq
	(*CreateFundLogResp)(nil),           // 57: admin.CreateFundLogResp
	(*UpdateFundLogReq)(nil),            // 58: admin.UpdateFundLogReq
	(*GetOperationalReportReq)(nil),     // 59: admin.GetOperationalReportReq
	(*Statistics)(nil),                  // 60: admin.Statistics
	(*OperationalReport)(nil),           // 61: admin.OperationalReport
	(*GetOperationalReportResp)(nil),    // 62: admin.GetOperationalReportResp
	(*UpdateAccountBalanceReq)(nil),     // 63: admin.UpdateAccountBalanceReq
	(*UpdateAccountBalanceResp)(nil),    // 64: admin.UpdateAccountBalanceResp
}
var file_admin_admin_proto_depIdxs = []int32{
	4,  // 0: admin.AdminLoginResp.User:type_name -> admin.User
	1,  // 1: admin.AddAdminUserResp.CommonResp:type_name -> admin.CommonResp
	17, // 2: admin.GetAdminUserListReq.Pagination:type_name -> admin.RequestPagination
	18, // 3: admin.GetAdminUserListResp.Pagination:type_name -> admin.ResponsePagination
	13, // 4: admin.GetAdminUserListResp.user:type_name -> admin.AdminUser
	17, // 5: admin.GetAdminUserRoleReq.Pagination:type_name -> admin.RequestPagination
	18, // 6: admin.GetAdminUserRoleResp.Pagination:type_name -> admin.ResponsePagination
	14, // 7: admin.GetAdminUserRoleResp.role:type_name -> admin.AdminUserRole
	1,  // 8: admin.AddAdminRoleResp.CommonResp:type_name -> admin.CommonResp
	29, // 9: admin.Action.Children:type_name -> admin.Action
	17, // 10: admin.GetAccountInformationReq.Pagination:type_name -> admin.RequestPagination
	33, // 11: admin.AccountInformation.Addresses:type_name -> admin.AccountAddresses
	34, // 12: admin.AccountInformation.CreationLoginInformation:type_name -> admin.LoginInformation
	34, // 13: admin.AccountInformation.LastLoginInformation:type_name -> admin.LoginInformation
	35, // 14: admin.AccountInformation.AccountAssets:type_name -> admin.AccountAsset
	36, // 15: admin.AccountInformation.Btc:type_name -> admin.Coin
	36, // 16: admin.AccountInformation.Eth:type_name -> admin.Coin
	36, // 17: admin.AccountInformation.Trx:type_name -> admin.Coin
	36, // 18: admin.AccountInformation.Erc:type_name -> admin.Coin
	36, // 19: admin.AccountInformation.Trc:type_name -> admin.Coin
	18, // 20: admin.GetAccountInformationResp.Pagination:type_name -> admin.ResponsePagination
	37, // 21: admin.GetAccountInformationResp.Account:type_name -> admin.AccountInformation
	35, // 22: admin.GetAccountInformationResp.TotalAssets:type_name -> admin.AccountAsset
	36, // 23: admin.GetAccountInformationResp.BtcTotal:type_name -> admin.Coin
	36, // 24: admin.GetAccountInformationResp.EthTotal:type_name -> admin.Coin
	36, // 25: admin.GetAccountInformationResp.ErcTotal:type_name -> admin.Coin
	36, // 26: admin.GetAccountInformationResp.TrcTotal:type_name -> admin.Coin
	36, // 27: admin.GetAccountInformationResp.TrxTotal:type_name -> admin.Coin
	17, // 28: admin.GetFundsLogReq.Pagination:type_name -> admin.RequestPagination
	18, // 29: admin.GetFundsLogResp.Pagination:type_name -> admin.ResponsePagination
	39, // 30: admin.GetFundsLogResp.FundLog:type_name -> admin.FundsLog
	17, // 31: admin.GetReceiveDetailsReq.Pagination:type_name -> admin.RequestPagination
	18, // 32: admin.GetReceiveDetailsResp.Pagination:type_name -> admin.ResponsePagination
	42, // 33: admin.GetReceiveDetailsResp.ReceiveDetail:type_name -> admin.ReceiveDetails
	17, // 34: admin.GetTransferDetailsReq.Pagination:type_name -> admin.RequestPagination
	18, // 35: admin.GetTransferDetailsResp.Pagination:type_name -> admin.ResponsePagination
	39, // 36: admin.GetTransferDetailsResp.TransferDetail:type_name -> admin.FundsLog
	17, // 37: admin.GetCurrenciesReq.Pagination:type_name -> admin.RequestPagination
	51, // 38: admin.GetCurrenciesResp.Currencies:type_name -> admin.Currency
	18, // 39: admin.GetCurrenciesResp.Pagination:type_name -> admin.ResponsePagination
	17, // 40: admin.GetOperationalReportReq.Pagination:type_name -> admin.RequestPagination
	35, // 41: admin.Statistics.AccountAssets:type_name -> admin.AccountAsset
	36, // 42: admin.Statistics.Btc:type_name -> admin.Coin
	36, // 43: admin.Statistics.Eth:type_name -> admin.Coin
	36, // 44: admin.Statistics.Trx:type_name -> admin.Coin
	36, // 45: admin.Statistics.Erc:type_name -> admin.Coin
	36, // 46: admin.Statistics.Trc:type_name -> admin.Coin
	60, // 47: admin.OperationalReport.TotalReceived:type_name -> admin.Statistics
	60, // 48: admin.OperationalReport.TotalTransfered:type_name -> admin.Statistics
	60, // 49: admin.OperationalReport.NetworkFee:type_name -> admin.Statistics
	61, // 50: admin.GetOperationalReportResp.OperationalReports:type_name -> admin.OperationalReport
	61, // 51: admin.GetOperationalReportResp.GrandTotals:type_name -> admin.OperationalReport
	35, // 52: admin.GetOperationalReportResp.TotalAssets:type_name -> admin.AccountAsset
	18, // 53: admin.GetOperationalReportResp.Pagination:type_name -> admin.ResponsePagination
	37, // 54: admin.UpdateAccountBalanceResp.Account:type_name -> admin.AccountInformation
	0,  // 55: admin.admin.TestAdminRPC:input_type -> admin.CommonReq
	2,  // 56: admin.admin.AdminLogin:input_type -> admin.AdminLoginReq
	7,  // 57: admin.admin.ChangeAdminUserPassword:input_type -> admin.ChangeAdminUserPasswordReq
	6,  // 58: admin.admin.AddAdminUser:input_type -> admin.AddAdminUserReq
	15, // 59: admin.admin.AddAdminUserRole:input_type -> admin.AddAdminUserRoleReq
	9,  // 60: admin.admin.GetAdminUserList:input_type -> admin.GetAdminUserListReq
	11, // 61: admin.admin.GetAdminUserRole:input_type -> admin.GetAdminUserRoleReq
	19, // 62: admin.admin.DeleteAdminUser:input_type -> admin.DeleteAdminReq
	20, // 63: admin.admin.UpdateAdminUser:input_type -> admin.UpdateAdminReq
	22, // 64: admin.admin.UpdateAdminRole:input_type -> admin.UpdateAdminRoleRequest
	24, // 65: admin.admin.DeleteRole:input_type -> admin.DeleteAdminRoleRequest
	2,  // 66: admin.admin.AdminLoginV2:input_type -> admin.AdminLoginReq
	26, // 67: admin.admin.GetAdminRoleActions:input_type -> admin.GetAdminActionsRequest
	30, // 68: admin.admin.GetAdminUser:input_type -> admin.GetAdminUserRequest
	32, // 69: admin.admin.GetAccountInformation:input_type -> admin.GetAccountInformationReq
	40, // 70: admin.admin.GetFundsLog:input_type -> admin.GetFundsLogReq
	43, // 71: admin.admin.GetReceiveDetails:input_type -> admin.GetReceiveDetailsReq
	45, // 72: admin.admin.GetTransferDetails:input_type -> admin.GetTransferDetailsReq
	47, // 73: admin.admin.ResetGoogleKey:input_type -> admin.ResetGoogleKeyReq
	48, // 74: admin.admin.GetRoleActions:input_type -> admin.GetRoleActionsReq
	50, // 75: admin.admin.GetCurrencies:input_type -> admin.GetCurrenciesReq
	53, // 76: admin.admin.UpdateCurrency:input_type -> admin.UpdateCurrencyReq
	59, // 77: admin.admin.GetOperationalReport:input_type -> admin.GetOperationalReportReq
	63, // 78: admin.admin.UpdateAccountBalance:input_type -> admin.UpdateAccountBalanceReq
	1,  // 79: admin.admin.TestAdminRPC:output_type -> admin.CommonResp
	3,  // 80: admin.admin.AdminLogin:output_type -> admin.AdminLoginResp
	8,  // 81: admin.admin.ChangeAdminUserPassword:output_type -> admin.ChangeAdminUserPasswordResp
	5,  // 82: admin.admin.AddAdminUser:output_type -> admin.AddAdminUserResp
	16, // 83: admin.admin.AddAdminUserRole:output_type -> admin.AddAdminRoleResp
	10, // 84: admin.admin.GetAdminUserList:output_type -> admin.GetAdminUserListResp
	12, // 85: admin.admin.GetAdminUserRole:output_type -> admin.GetAdminUserRoleResp
	1,  // 86: admin.admin.DeleteAdminUser:output_type -> admin.CommonResp
	21, // 87: admin.admin.UpdateAdminUser:output_type -> admin.UpdateAdminResp
	23, // 88: admin.admin.UpdateAdminRole:output_type -> admin.UpdateAdminRoleResponse
	1,  // 89: admin.admin.DeleteRole:output_type -> admin.CommonResp
	3,  // 90: admin.admin.AdminLoginV2:output_type -> admin.AdminLoginResp
	29, // 91: admin.admin.GetAdminRoleActions:output_type -> admin.Action
	31, // 92: admin.admin.GetAdminUser:output_type -> admin.GetAdminUserResponse
	38, // 93: admin.admin.GetAccountInformation:output_type -> admin.GetAccountInformationResp
	41, // 94: admin.admin.GetFundsLog:output_type -> admin.GetFundsLogResp
	44, // 95: admin.admin.GetReceiveDetails:output_type -> admin.GetReceiveDetailsResp
	46, // 96: admin.admin.GetTransferDetails:output_type -> admin.GetTransferDetailsResp
	1,  // 97: admin.admin.ResetGoogleKey:output_type -> admin.CommonResp
	49, // 98: admin.admin.GetRoleActions:output_type -> admin.GetRoleActionsResp
	52, // 99: admin.admin.GetCurrencies:output_type -> admin.GetCurrenciesResp
	1,  // 100: admin.admin.UpdateCurrency:output_type -> admin.CommonResp
	62, // 101: admin.admin.GetOperationalReport:output_type -> admin.GetOperationalReportResp
	64, // 102: admin.admin.UpdateAccountBalance:output_type -> admin.UpdateAccountBalanceResp
	79, // [79:103] is the sub-list for method output_type
	55, // [55:79] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_admin_admin_proto_init() }
func file_admin_admin_proto_init() {
	if File_admin_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAdminUserPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAdminUserPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminUserRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminUserRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminUserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminUserRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAdminReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdminRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAdminRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminActionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminActionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdminUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountInformationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAddresses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountInformationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundsLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFundsLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFundsLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReceiveDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReceiveDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetGoogleKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleActionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleActionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrenciesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrenciesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCurrencyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFundLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFundLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFundLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationalReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationalReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationalReportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_admin_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountBalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_admin_proto_goTypes,
		DependencyIndexes: file_admin_admin_proto_depIdxs,
		MessageInfos:      file_admin_admin_proto_msgTypes,
	}.Build()
	File_admin_admin_proto = out.File
	file_admin_admin_proto_rawDesc = nil
	file_admin_admin_proto_goTypes = nil
	file_admin_admin_proto_depIdxs = nil
}
